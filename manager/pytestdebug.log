versions pytest-5.2.1, py-1.8.0, python-3.7.2.final.0
cwd=/usr/src/love/manager
args=['-k', 'delete', '--debug']

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x7f3418040dd8>
    pytest_plugin_registered [hook]
        plugin: <Session manager exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x7f3418040dd8>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7f3410ae0630>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x7f3410ae0828>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.stepwise.StepwisePlugin object at 0x7f3410ae0940>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x7f3418040dd8>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/usr/local/lib/python3.7/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/usr/local/lib/python3.7/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/usr/local/lib/python3.7/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/usr/local/lib/python3.7/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/usr/local/lib/python3.7/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/usr/local/lib/python3.7/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/usr/local/lib/python3.7/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/usr/local/lib/python3.7/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/usr/local/lib/python3.7/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/usr/local/lib/python3.7/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/usr/local/lib/python3.7/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/usr/local/lib/python3.7/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/usr/local/lib/python3.7/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/usr/local/lib/python3.7/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/usr/local/lib/python3.7/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/usr/local/lib/python3.7/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/usr/local/lib/python3.7/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/usr/local/lib/python3.7/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.resultlog' from '/usr/local/lib/python3.7/site-packages/_pytest/resultlog.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/usr/local/lib/python3.7/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/usr/local/lib/python3.7/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/usr/local/lib/python3.7/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/usr/local/lib/python3.7/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/usr/local/lib/python3.7/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/usr/local/lib/python3.7/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/usr/local/lib/python3.7/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/usr/local/lib/python3.7/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/usr/local/lib/python3.7/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/usr/local/lib/python3.7/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_env.plugin' from '/usr/local/lib/python3.7/site-packages/pytest_env/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from '/usr/local/lib/python3.7/site-packages/pytest_asyncio/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_django.plugin' from '/usr/local/lib/python3.7/site-packages/pytest_django/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended'> err=<FDCapture 2 oldfd=6 _state='suspended'> in_=<FDCapture 0 oldfd=3 _state='started'> _state='suspended' _in_suspended='<UNSET>'> _current_item=None>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7f3410ae0630>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x7f3410ae0828>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.stepwise.StepwisePlugin object at 0x7f3410ae0940>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x7f3410ae0be0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x7f3410a76320>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x7f3418040dd8>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/usr/local/lib/python3.7/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/usr/local/lib/python3.7/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/usr/local/lib/python3.7/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/usr/local/lib/python3.7/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/usr/local/lib/python3.7/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/usr/local/lib/python3.7/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/usr/local/lib/python3.7/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/usr/local/lib/python3.7/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/usr/local/lib/python3.7/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/usr/local/lib/python3.7/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/usr/local/lib/python3.7/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/usr/local/lib/python3.7/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/usr/local/lib/python3.7/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/usr/local/lib/python3.7/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/usr/local/lib/python3.7/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/usr/local/lib/python3.7/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/usr/local/lib/python3.7/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/usr/local/lib/python3.7/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.resultlog' from '/usr/local/lib/python3.7/site-packages/_pytest/resultlog.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/usr/local/lib/python3.7/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/usr/local/lib/python3.7/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/usr/local/lib/python3.7/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/usr/local/lib/python3.7/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/usr/local/lib/python3.7/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/usr/local/lib/python3.7/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/usr/local/lib/python3.7/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/usr/local/lib/python3.7/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/usr/local/lib/python3.7/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/usr/local/lib/python3.7/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_env.plugin' from '/usr/local/lib/python3.7/site-packages/pytest_env/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from '/usr/local/lib/python3.7/site-packages/pytest_asyncio/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_django.plugin' from '/usr/local/lib/python3.7/site-packages/pytest_django/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended'> err=<FDCapture 2 oldfd=6 _state='suspended'> in_=<FDCapture 0 oldfd=3 _state='started'> _state='suspended' _in_suspended='<UNSET>'> _current_item=None>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7f3410ae0630>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x7f3410ae0828>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.stepwise.StepwisePlugin object at 0x7f3410ae0940>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x7f3410ae0be0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x7f3410a76320>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x7f3410a76828>
          manager: <_pytest.config.PytestPluginManager object at 0x7f341c1b92b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x7f3418040dd8>
          startdir: /usr/src/love/manager
      finish pytest_report_header --> [['rootdir: /usr/src/love/manager, inifile: pytest.ini', 'plugins: env-0.6.2, asyncio-0.10.0, django-3.5.1'], ['Django settings: manager.settings (from ini file)'], ['using: pytest-5.2.1 pylib-1.8.0', 'setuptools registered plugins:', '  pytest-env-0.6.2 at /usr/local/lib/python3.7/site-packages/pytest_env/plugin.py', '  pytest-asyncio-0.10.0 at /usr/local/lib/python3.7/site-packages/pytest_asyncio/plugin.py', '  pytest-django-3.5.1 at /usr/local/lib/python3.7/site-packages/pytest_django/plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['/usr/src/love/manager'] [collection]
        pytest_collectstart [hook]
            collector: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument /usr/src/love/manager [collection]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/.pytest_cache
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
          early skip of rewriting module: py._code [assertion]
          early skip of rewriting module: py._code.code [assertion]
          early skip of rewriting module: repr [assertion]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/ui_framework
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/ui_framework
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/static_files
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/static_files
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/templates
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/templates
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/subscription
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/subscription
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/manager
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/manager
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/api
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/api
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/media
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/db.sqlite3
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/db.sqlite3
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/manage.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/manage.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/pytest.ini
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/pytest.ini
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/pytestdebug.log
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/pytestdebug.log
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/requirements.txt
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/requirements.txt
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/runserver-dev.sh
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/runserver-dev.sh
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/runserver.sh
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/runserver.sh
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/api/management
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/api/management
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/api/tests
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/api/tests
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/api/migrations
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/api/migrations
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/api/__init__.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/api/__init__.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/love/manager/api/__init__.py
                  parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /usr/src/love/manager/api> [hook]
            finish pytest_collect_file --> [<Package /usr/src/love/manager/api>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/api/management/commands
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/api/management/commands
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/api/management/commands/createusers.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/api/management/commands/createusers.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/api/management/commands/tests.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/api/management/commands/tests.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/love/manager/api/management/commands/tests.py
                  parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Module api/management/commands/tests.py> [hook]
            finish pytest_collect_file --> [<Module api/management/commands/tests.py>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/api/migrations/__init__.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/api/migrations/__init__.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/love/manager/api/migrations/__init__.py
                  parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /usr/src/love/manager/api/migrations> [hook]
            finish pytest_collect_file --> [<Package /usr/src/love/manager/api/migrations>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/api/tests/__init__.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/api/tests/__init__.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/love/manager/api/tests/__init__.py
                  parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /usr/src/love/manager/api/tests> [hook]
            finish pytest_collect_file --> [<Package /usr/src/love/manager/api/tests>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/manager/__init__.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/manager/__init__.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/love/manager/manager/__init__.py
                  parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /usr/src/love/manager/manager> [hook]
            finish pytest_collect_file --> [<Package /usr/src/love/manager/manager>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/media/thumbnails
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/0ba35267-f3a.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/0ba35267-f3a.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/adb5bff8-ff3.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/adb5bff8-ff3.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/e79df1ea-33a.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/e79df1ea-33a.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_1.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_1.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_13.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_13.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_15.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_15.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_17.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_17.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_18.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_18.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_19.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_19.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_20.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_20.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_21.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_21.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_22.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_22.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_23.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_23.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_24.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_24.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_25.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_25.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_26.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_26.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_27.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_27.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_28.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_28.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_29.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_29.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_30.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_30.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_31.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_31.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_32.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_32.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_33.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_33.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_34.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_34.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_37.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_37.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_38.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_38.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_40.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_40.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/media/thumbnails/view_41.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/media/thumbnails/view_41.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/static_files/css
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/static_files/css
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/bootstrap-theme.min.css
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/bootstrap-theme.min.css
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/bootstrap.min.css
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/bootstrap.min.css
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/bootstrap.min.js
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/bootstrap.min.js
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/docs.min.js
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/docs.min.js
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/ie-emulation-modes-warning.js
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/ie-emulation-modes-warning.js
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/ie10-viewport-bug-workaround.css
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/ie10-viewport-bug-workaround.css
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/ie10-viewport-bug-workaround.js
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/ie10-viewport-bug-workaround.js
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/jquery-1.12.4.min.js
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/jquery-1.12.4.min.js
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/theme.css
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/static_files/Theme Template for Bootstrap_files/theme.css
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/static_files/css/love-ui.css
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/static_files/css/love-ui.css
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/subscription/tests
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/subscription/tests
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/subscription/migrations
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/subscription/migrations
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/subscription/__init__.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/subscription/__init__.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/love/manager/subscription/__init__.py
                  parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /usr/src/love/manager/subscription> [hook]
            finish pytest_collect_file --> [<Package /usr/src/love/manager/subscription>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/subscription/migrations/__init__.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/subscription/migrations/__init__.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/love/manager/subscription/migrations/__init__.py
                  parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /usr/src/love/manager/subscription/migrations> [hook]
            finish pytest_collect_file --> [<Package /usr/src/love/manager/subscription/migrations>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/subscription/tests/test_commands.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/subscription/tests/test_commands.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/love/manager/subscription/tests/test_commands.py
                  parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Module subscription/tests/test_commands.py> [hook]
            finish pytest_collect_file --> [<Module subscription/tests/test_commands.py>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/subscription/tests/test_connection.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/subscription/tests/test_connection.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/love/manager/subscription/tests/test_connection.py
                  parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Module subscription/tests/test_connection.py> [hook]
            finish pytest_collect_file --> [<Module subscription/tests/test_connection.py>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/subscription/tests/test_heartbeat.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/subscription/tests/test_heartbeat.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/love/manager/subscription/tests/test_heartbeat.py
                  parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Module subscription/tests/test_heartbeat.py> [hook]
            finish pytest_collect_file --> [<Module subscription/tests/test_heartbeat.py>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/subscription/tests/test_lovecsc_subscriptions.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/subscription/tests/test_lovecsc_subscriptions.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/love/manager/subscription/tests/test_lovecsc_subscriptions.py
                  parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Module subscription/tests/test_lovecsc_subscriptions.py> [hook]
            finish pytest_collect_file --> [<Module subscription/tests/test_lovecsc_subscriptions.py>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/subscription/tests/test_subscriptions.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/subscription/tests/test_subscriptions.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/love/manager/subscription/tests/test_subscriptions.py
                  parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Module subscription/tests/test_subscriptions.py> [hook]
            finish pytest_collect_file --> [<Module subscription/tests/test_subscriptions.py>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/templates/registration
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/templates/registration
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/templates/index.html
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/templates/index.html
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/templates/test.html
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/templates/test.html
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/templates/registration/login.html
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/templates/registration/login.html
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/ui_framework/tests
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/ui_framework/tests
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/ui_framework/migrations
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/ui_framework/migrations
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/ui_framework/fixtures
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/ui_framework/fixtures
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/ui_framework/__init__.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/ui_framework/__init__.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/love/manager/ui_framework/__init__.py
                  parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /usr/src/love/manager/ui_framework> [hook]
            finish pytest_collect_file --> [<Package /usr/src/love/manager/ui_framework>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/ui_framework/fixtures/initial_data.json
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/ui_framework/fixtures/initial_data.json
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/ui_framework/migrations/__init__.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/ui_framework/migrations/__init__.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/love/manager/ui_framework/migrations/__init__.py
                  parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /usr/src/love/manager/ui_framework/migrations> [hook]
            finish pytest_collect_file --> [<Package /usr/src/love/manager/ui_framework/migrations>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/ui_framework/tests/media
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/ui_framework/tests/media
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/ui_framework/tests/__init__.py
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/ui_framework/tests/__init__.py
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/love/manager/ui_framework/tests/__init__.py
                  parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /usr/src/love/manager/ui_framework/tests> [hook]
            finish pytest_collect_file --> [<Package /usr/src/love/manager/ui_framework/tests>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/ui_framework/tests/media/mock
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/ui_framework/tests/media/mock
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/ui_framework/tests/media/thumbnails
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /usr/src/love/manager/ui_framework/tests/media/thumbnails
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/ui_framework/tests/media/mock/test
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/ui_framework/tests/media/mock/test
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/ui_framework/tests/media/mock/test.png
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/ui_framework/tests/media/mock/test.png
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/love/manager/ui_framework/tests/media/thumbnails/.gitinclude
                config: <_pytest.config.Config object at 0x7f3418040dd8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /usr/src/love/manager/ui_framework/tests/media/thumbnails/.gitinclude
                parent: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=15 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=15 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Package /usr/src/love/manager/api> [collection]
      pytest_collectstart [hook]
          collector: <Package /usr/src/love/manager/api>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /usr/src/love/manager/api>
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/management
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /usr/src/love/manager/api/management
            parent: <Package /usr/src/love/manager/api>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/tests
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /usr/src/love/manager/api/tests
            parent: <Package /usr/src/love/manager/api>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/migrations
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /usr/src/love/manager/api/migrations
            parent: <Package /usr/src/love/manager/api>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/admin.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/admin.py
            parent: <Package /usr/src/love/manager/api>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/apps.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/apps.py
            parent: <Package /usr/src/love/manager/api>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/authentication.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/authentication.py
            parent: <Package /usr/src/love/manager/api>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/middleware.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/middleware.py
            parent: <Package /usr/src/love/manager/api>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/models.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/models.py
            parent: <Package /usr/src/love/manager/api>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/schema_validator.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/schema_validator.py
            parent: <Package /usr/src/love/manager/api>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/serializers.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/serializers.py
            parent: <Package /usr/src/love/manager/api>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/signals.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/signals.py
            parent: <Package /usr/src/love/manager/api>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/urls.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/urls.py
            parent: <Package /usr/src/love/manager/api>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/views.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/views.py
            parent: <Package /usr/src/love/manager/api>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/management/commands
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /usr/src/love/manager/api/management/commands
            parent: <Package /usr/src/love/manager/api>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/management/commands/createusers.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/management/commands/tests.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/migrations/__init__.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/tests/__init__.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
      finish pytest_make_collect_report --> <CollectReport 'api/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'api/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module api/management/commands/tests.py> [collection]
      pytest_collectstart [hook]
          collector: <Module api/management/commands/tests.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module api/management/commands/tests.py>
      find_module called for: tests [assertion]
      matched test file '/usr/src/love/manager/api/management/commands/tests.py' [assertion]
      found cached rewritten pyc for '/usr/src/love/manager/api/management/commands/tests.py' [assertion]
      early skip of rewriting module: django.test [assertion]
      early skip of rewriting module: django.test.client [assertion]
      early skip of rewriting module: django.test.signals [assertion]
      early skip of rewriting module: django.test.utils [assertion]
      early skip of rewriting module: xml.dom [assertion]
      early skip of rewriting module: xml.dom.domreg [assertion]
      early skip of rewriting module: xml.dom.minidom [assertion]
      early skip of rewriting module: xml.dom.minicompat [assertion]
      early skip of rewriting module: xml.dom.xmlbuilder [assertion]
      early skip of rewriting module: xml.dom.NodeFilter [assertion]
      early skip of rewriting module: django.test.testcases [assertion]
      early skip of rewriting module: django.core.management.sql [assertion]
      early skip of rewriting module: django.test.html [assertion]
      early skip of rewriting module: api.management [assertion]
      early skip of rewriting module: api.management.commands [assertion]
      early skip of rewriting module: api.management.commands.createusers [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __name__
            obj: tests
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __doc__
            obj: Test users' authentication thorugh the API.
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __spec__
            obj: ModuleSpec(name='tests', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>, origin='/usr/src/love/manager/api/management/commands/tests.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __file__
            obj: /usr/src/love/manager/api/management/commands/tests.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __cached__
            obj: /usr/src/love/manager/api/management/commands/__pycache__/tests.cpython-37.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python3.7/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: TestCase
            obj: <class 'django.test.testcases.TestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase TestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: User
            obj: <class 'django.contrib.auth.models.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: Group
            obj: <class 'django.contrib.auth.models.Group'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: Command
            obj: <class 'api.management.commands.createusers.Command'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: admin_username
            obj: admin
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: user_username
            obj: user
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: cmd_user_username
            obj: cmd_user
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: cmd_groupname
            obj: cmd
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: cmd_permission_codename
            obj: api.command.execute_command
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: CreateusersTestCase
            obj: <class 'tests.CreateusersTestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase CreateusersTestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d739f40>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module api/management/commands/tests.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'api/management/commands/tests.py' lenresult=2 outcome='passed'> [hook]
    genitems <UnitTestCase TestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase TestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase TestCase>
      finish pytest_make_collect_report --> <CollectReport 'api/management/commands/tests.py::TestCase' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'api/management/commands/tests.py::TestCase' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase CreateusersTestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase CreateusersTestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase CreateusersTestCase>
      finish pytest_make_collect_report --> <CollectReport 'api/management/commands/tests.py::CreateusersTestCase' lenresult=2 outcome='passed'> [hook]
    genitems <TestCaseFunction test_command_creates_users> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_command_creates_users>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_command_sets_permissions_even_if_users_already_existed> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_command_sets_permissions_even_if_users_already_existed>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'api/management/commands/tests.py::CreateusersTestCase' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'api/management/commands/tests.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /usr/src/love/manager/api/migrations> [collection]
      pytest_collectstart [hook]
          collector: <Package /usr/src/love/manager/api/migrations>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /usr/src/love/manager/api/migrations>
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/migrations/0001_initial.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/migrations/0001_initial.py
            parent: <Package /usr/src/love/manager/api/migrations>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/migrations/0002_auto_20190528_1546.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/migrations/0002_auto_20190528_1546.py
            parent: <Package /usr/src/love/manager/api/migrations>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/migrations/0003_auto_20190528_1552.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/migrations/0003_auto_20190528_1552.py
            parent: <Package /usr/src/love/manager/api/migrations>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/migrations/0004_globalpermissions.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/migrations/0004_globalpermissions.py
            parent: <Package /usr/src/love/manager/api/migrations>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/migrations/0005_auto_20190722_1622.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/migrations/0005_auto_20190722_1622.py
            parent: <Package /usr/src/love/manager/api/migrations>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'api/migrations/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'api/migrations/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /usr/src/love/manager/api/tests> [collection]
      pytest_collectstart [hook]
          collector: <Package /usr/src/love/manager/api/tests>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /usr/src/love/manager/api/tests>
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/tests/test_schema_validation.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/tests/test_schema_validation.py
            parent: <Package /usr/src/love/manager/api/tests>
          pytest_pycollect_makemodule [hook]
              path: /usr/src/love/manager/api/tests/test_schema_validation.py
              parent: <Package /usr/src/love/manager/api/tests>
          finish pytest_pycollect_makemodule --> <Module test_schema_validation.py> [hook]
        finish pytest_collect_file --> [<Module test_schema_validation.py>] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/api/tests/tests_auth_api.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/api/tests/tests_auth_api.py
            parent: <Package /usr/src/love/manager/api/tests>
          pytest_pycollect_makemodule [hook]
              path: /usr/src/love/manager/api/tests/tests_auth_api.py
              parent: <Package /usr/src/love/manager/api/tests>
          finish pytest_pycollect_makemodule --> <Module tests_auth_api.py> [hook]
        finish pytest_collect_file --> [<Module tests_auth_api.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'api/tests/__init__.py' lenresult=2 outcome='passed'> [hook]
    genitems <Module test_schema_validation.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_schema_validation.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_schema_validation.py>
      find_module called for: api.tests [assertion]
      find_module called for: api.tests.test_schema_validation [assertion]
      matched test file '/usr/src/love/manager/api/tests/test_schema_validation.py' [assertion]
      found cached rewritten pyc for '/usr/src/love/manager/api/tests/test_schema_validation.py' [assertion]
      early skip of rewriting module: rest_framework.test [assertion]
      early skip of rewriting module: rest_framework.compat [assertion]
      early skip of rewriting module: coreapi [assertion]
      early skip of rewriting module: coreapi.auth [assertion]
      early skip of rewriting module: coreapi.utils [assertion]
      early skip of rewriting module: coreapi.exceptions [assertion]
      early skip of rewriting module: coreapi.compat [assertion]
      early skip of rewriting module: urlparse [assertion]
      early skip of rewriting module: click [assertion]
      early skip of rewriting module: requests [assertion]
      early skip of rewriting module: urllib3 [assertion]
      early skip of rewriting module: urllib3.connectionpool [assertion]
      early skip of rewriting module: urllib3.exceptions [assertion]
      early skip of rewriting module: urllib3.packages [assertion]
      early skip of rewriting module: urllib3.packages.ssl_match_hostname [assertion]
      early skip of rewriting module: urllib3.packages.six [assertion]
      early skip of rewriting module: urllib3.packages.six.moves [assertion]
      early skip of rewriting module: urllib3.packages.six.moves.http_client [assertion]
      early skip of rewriting module: urllib3.connection [assertion]
      early skip of rewriting module: urllib3.util [assertion]
      early skip of rewriting module: urllib3.util.connection [assertion]
      early skip of rewriting module: urllib3.util.wait [assertion]
      early skip of rewriting module: urllib3.contrib [assertion]
      early skip of rewriting module: urllib3.contrib._appengine_environ [assertion]
      early skip of rewriting module: urllib3.util.request [assertion]
      early skip of rewriting module: brotli [assertion]
      early skip of rewriting module: urllib3.util.response [assertion]
      early skip of rewriting module: urllib3.util.ssl_ [assertion]
      early skip of rewriting module: urllib3.util.url [assertion]
      early skip of rewriting module: urllib3.util.timeout [assertion]
      early skip of rewriting module: urllib3.util.retry [assertion]
      early skip of rewriting module: urllib3._collections [assertion]
      early skip of rewriting module: urllib3.request [assertion]
      early skip of rewriting module: urllib3.filepost [assertion]
      early skip of rewriting module: urllib3.fields [assertion]
      early skip of rewriting module: urllib3.packages.six.moves.urllib [assertion]
      early skip of rewriting module: urllib3.packages.six.moves.urllib.parse [assertion]
      early skip of rewriting module: urllib3.response [assertion]
      early skip of rewriting module: brotli [assertion]
      early skip of rewriting module: urllib3.util.queue [assertion]
      early skip of rewriting module: urllib3.poolmanager [assertion]
      early skip of rewriting module: chardet [assertion]
      early skip of rewriting module: chardet.compat [assertion]
      early skip of rewriting module: chardet.universaldetector [assertion]
      early skip of rewriting module: chardet.charsetgroupprober [assertion]
      early skip of rewriting module: chardet.enums [assertion]
      early skip of rewriting module: chardet.charsetprober [assertion]
      early skip of rewriting module: chardet.escprober [assertion]
      early skip of rewriting module: chardet.codingstatemachine [assertion]
      early skip of rewriting module: chardet.escsm [assertion]
      early skip of rewriting module: chardet.latin1prober [assertion]
      early skip of rewriting module: chardet.mbcsgroupprober [assertion]
      early skip of rewriting module: chardet.utf8prober [assertion]
      early skip of rewriting module: chardet.mbcssm [assertion]
      early skip of rewriting module: chardet.sjisprober [assertion]
      early skip of rewriting module: chardet.mbcharsetprober [assertion]
      early skip of rewriting module: chardet.chardistribution [assertion]
      early skip of rewriting module: chardet.euctwfreq [assertion]
      early skip of rewriting module: chardet.euckrfreq [assertion]
      early skip of rewriting module: chardet.gb2312freq [assertion]
      early skip of rewriting module: chardet.big5freq [assertion]
      early skip of rewriting module: chardet.jisfreq [assertion]
      early skip of rewriting module: chardet.jpcntx [assertion]
      early skip of rewriting module: chardet.eucjpprober [assertion]
      early skip of rewriting module: chardet.gb2312prober [assertion]
      early skip of rewriting module: chardet.euckrprober [assertion]
      early skip of rewriting module: chardet.cp949prober [assertion]
      early skip of rewriting module: chardet.big5prober [assertion]
      early skip of rewriting module: chardet.euctwprober [assertion]
      early skip of rewriting module: chardet.sbcsgroupprober [assertion]
      early skip of rewriting module: chardet.sbcharsetprober [assertion]
      early skip of rewriting module: chardet.langcyrillicmodel [assertion]
      early skip of rewriting module: chardet.langgreekmodel [assertion]
      early skip of rewriting module: chardet.langbulgarianmodel [assertion]
      early skip of rewriting module: chardet.langthaimodel [assertion]
      early skip of rewriting module: chardet.langhebrewmodel [assertion]
      early skip of rewriting module: chardet.hebrewprober [assertion]
      early skip of rewriting module: chardet.langturkishmodel [assertion]
      early skip of rewriting module: chardet.version [assertion]
      early skip of rewriting module: requests.exceptions [assertion]
      early skip of rewriting module: urllib3.contrib.pyopenssl [assertion]
      early skip of rewriting module: OpenSSL [assertion]
      early skip of rewriting module: requests.__version__ [assertion]
      early skip of rewriting module: requests.utils [assertion]
      early skip of rewriting module: requests.certs [assertion]
      early skip of rewriting module: certifi [assertion]
      early skip of rewriting module: certifi.core [assertion]
      early skip of rewriting module: requests._internal_utils [assertion]
      early skip of rewriting module: requests.compat [assertion]
      early skip of rewriting module: simplejson [assertion]
      early skip of rewriting module: requests.cookies [assertion]
      early skip of rewriting module: requests.structures [assertion]
      early skip of rewriting module: requests.packages [assertion]
      early skip of rewriting module: idna [assertion]
      early skip of rewriting module: idna.package_data [assertion]
      early skip of rewriting module: idna.core [assertion]
      early skip of rewriting module: idna.idnadata [assertion]
      early skip of rewriting module: idna.intranges [assertion]
      early skip of rewriting module: requests.models [assertion]
      early skip of rewriting module: encodings.idna [assertion]
      early skip of rewriting module: stringprep [assertion]
      early skip of rewriting module: requests.hooks [assertion]
      early skip of rewriting module: requests.auth [assertion]
      early skip of rewriting module: requests.status_codes [assertion]
      early skip of rewriting module: requests.api [assertion]
      early skip of rewriting module: requests.sessions [assertion]
      early skip of rewriting module: requests.adapters [assertion]
      early skip of rewriting module: urllib3.contrib.socks [assertion]
      early skip of rewriting module: socks [assertion]
      early skip of rewriting module: coreapi.codecs [assertion]
      early skip of rewriting module: coreapi.codecs.base [assertion]
      early skip of rewriting module: itypes [assertion]
      early skip of rewriting module: coreapi.codecs.corejson [assertion]
      early skip of rewriting module: coreapi.document [assertion]
      early skip of rewriting module: coreschema [assertion]
      early skip of rewriting module: coreschema.schemas [assertion]
      early skip of rewriting module: coreschema.compat [assertion]
      early skip of rewriting module: coreschema.formats [assertion]
      early skip of rewriting module: coreschema.utils [assertion]
      early skip of rewriting module: coreschema.encodings [assertion]
      early skip of rewriting module: coreschema.encodings.html [assertion]
      early skip of rewriting module: coreapi.codecs.display [assertion]
      early skip of rewriting module: coreapi.codecs.download [assertion]
      early skip of rewriting module: coreapi.codecs.jsondata [assertion]
      early skip of rewriting module: coreapi.codecs.python [assertion]
      early skip of rewriting module: coreapi.codecs.text [assertion]
      early skip of rewriting module: coreapi.transports [assertion]
      early skip of rewriting module: coreapi.transports.base [assertion]
      early skip of rewriting module: coreapi.transports.http [assertion]
      early skip of rewriting module: uritemplate [assertion]
      early skip of rewriting module: uritemplate.api [assertion]
      early skip of rewriting module: uritemplate.orderedset [assertion]
      early skip of rewriting module: uritemplate.template [assertion]
      early skip of rewriting module: uritemplate.variable [assertion]
      early skip of rewriting module: coreapi.client [assertion]
      early skip of rewriting module: yaml [assertion]
      early skip of rewriting module: yaml.error [assertion]
      early skip of rewriting module: yaml.tokens [assertion]
      early skip of rewriting module: yaml.events [assertion]
      early skip of rewriting module: yaml.nodes [assertion]
      early skip of rewriting module: yaml.loader [assertion]
      early skip of rewriting module: yaml.reader [assertion]
      early skip of rewriting module: yaml.scanner [assertion]
      early skip of rewriting module: yaml.parser [assertion]
      early skip of rewriting module: yaml.composer [assertion]
      early skip of rewriting module: yaml.constructor [assertion]
      early skip of rewriting module: yaml.resolver [assertion]
      early skip of rewriting module: yaml.dumper [assertion]
      early skip of rewriting module: yaml.emitter [assertion]
      early skip of rewriting module: yaml.serializer [assertion]
      early skip of rewriting module: yaml.representer [assertion]
      early skip of rewriting module: yaml.cyaml [assertion]
      early skip of rewriting module: _yaml [assertion]
      early skip of rewriting module: markdown [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments.util [assertion]
      early skip of rewriting module: pygments.lexers [assertion]
      early skip of rewriting module: pygments.lexers._mapping [assertion]
      early skip of rewriting module: pygments.modeline [assertion]
      early skip of rewriting module: pygments.plugin [assertion]
      early skip of rewriting module: pygments.lexers.special [assertion]
      early skip of rewriting module: pygments.lexer [assertion]
      early skip of rewriting module: pygments.filter [assertion]
      early skip of rewriting module: pygments.filters [assertion]
      early skip of rewriting module: pygments.token [assertion]
      early skip of rewriting module: pygments.regexopt [assertion]
      early skip of rewriting module: pygments.formatters [assertion]
      early skip of rewriting module: pygments.formatters._mapping [assertion]
      early skip of rewriting module: pygments.formatters.html [assertion]
      early skip of rewriting module: pygments.formatter [assertion]
      early skip of rewriting module: pygments.styles [assertion]
      early skip of rewriting module: ctags [assertion]
      early skip of rewriting module: rest_framework.settings [assertion]
      early skip of rewriting module: rest_framework.renderers [assertion]
      early skip of rewriting module: rest_framework.exceptions [assertion]
      early skip of rewriting module: rest_framework.status [assertion]
      early skip of rewriting module: rest_framework.utils [assertion]
      early skip of rewriting module: rest_framework.utils.serializer_helpers [assertion]
      early skip of rewriting module: rest_framework.utils.json [assertion]
      early skip of rewriting module: rest_framework.serializers [assertion]
      early skip of rewriting module: rest_framework.fields [assertion]
      early skip of rewriting module: rest_framework.utils.html [assertion]
      early skip of rewriting module: rest_framework.utils.humanize_datetime [assertion]
      early skip of rewriting module: rest_framework.utils.representation [assertion]
      early skip of rewriting module: rest_framework.utils.formatting [assertion]
      early skip of rewriting module: rest_framework.utils.model_meta [assertion]
      early skip of rewriting module: rest_framework.utils.field_mapping [assertion]
      early skip of rewriting module: rest_framework.validators [assertion]
      early skip of rewriting module: rest_framework.relations [assertion]
      early skip of rewriting module: rest_framework.reverse [assertion]
      early skip of rewriting module: rest_framework.utils.urls [assertion]
      early skip of rewriting module: rest_framework.request [assertion]
      early skip of rewriting module: rest_framework.utils.encoders [assertion]
      early skip of rewriting module: rest_framework.utils.breadcrumbs [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __name__
            obj: api.tests.test_schema_validation
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __package__
            obj: api.tests
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __spec__
            obj: ModuleSpec(name='api.tests.test_schema_validation', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>, origin='/usr/src/love/manager/api/tests/test_schema_validation.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __file__
            obj: /usr/src/love/manager/api/tests/test_schema_validation.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __cached__
            obj: /usr/src/love/manager/api/tests/__pycache__/test_schema_validation.cpython-37.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python3.7/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: TestCase
            obj: <class 'django.test.testcases.TestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase TestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: reverse
            obj: <function reverse at 0x7f34136a7e18>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: Token
            obj: <class 'api.models.Token'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: APIClient
            obj: <class 'rest_framework.test.APIClient'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: User
            obj: <class 'django.contrib.auth.models.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: Permission
            obj: <class 'django.contrib.auth.models.Permission'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: yaml
            obj: <module 'yaml' from '/usr/local/lib/python3.7/site-packages/yaml/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: SchemaValidationTestCase
            obj: <class 'api.tests.test_schema_validation.SchemaValidationTestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase SchemaValidationTestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d739f40>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schema_validation.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'api/tests/test_schema_validation.py' lenresult=2 outcome='passed'> [hook]
    genitems <UnitTestCase TestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase TestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase TestCase>
      finish pytest_make_collect_report --> <CollectReport 'api/tests/test_schema_validation.py::TestCase' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'api/tests/test_schema_validation.py::TestCase' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase SchemaValidationTestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase SchemaValidationTestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase SchemaValidationTestCase>
      finish pytest_make_collect_report --> <CollectReport 'api/tests/test_schema_validation.py::SchemaValidationTestCase' lenresult=3 outcome='passed'> [hook]
    genitems <TestCaseFunction test_invalid_config> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_invalid_config>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_syntax_error> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_syntax_error>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_valid_config> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_valid_config>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'api/tests/test_schema_validation.py::SchemaValidationTestCase' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'api/tests/test_schema_validation.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests_auth_api.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests_auth_api.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests_auth_api.py>
      find_module called for: api.tests.tests_auth_api [assertion]
      matched test file '/usr/src/love/manager/api/tests/tests_auth_api.py' [assertion]
      found cached rewritten pyc for '/usr/src/love/manager/api/tests/tests_auth_api.py' [assertion]
      early skip of rewriting module: freezegun [assertion]
      early skip of rewriting module: freezegun.api [assertion]
      early skip of rewriting module: dateutil [assertion]
      early skip of rewriting module: dateutil._version [assertion]
      early skip of rewriting module: dateutil.parser [assertion]
      early skip of rewriting module: dateutil.parser._parser [assertion]
      early skip of rewriting module: dateutil.relativedelta [assertion]
      early skip of rewriting module: dateutil._common [assertion]
      early skip of rewriting module: dateutil.tz [assertion]
      early skip of rewriting module: dateutil.tz.tz [assertion]
      early skip of rewriting module: dateutil.tz._common [assertion]
      early skip of rewriting module: dateutil.tz._factories [assertion]
      early skip of rewriting module: dateutil.tz.win [assertion]
      early skip of rewriting module: six.moves.winreg [assertion]
      early skip of rewriting module: contextmanager [assertion]
      early skip of rewriting module: dateutil.parser.isoparser [assertion]
      early skip of rewriting module: maya [assertion]
      early skip of rewriting module: copy_reg [assertion]
      early skip of rewriting module: freezegun._async [assertion]
      early skip of rewriting module: sqlite3 [assertion]
      early skip of rewriting module: sqlite3.dbapi2 [assertion]
      early skip of rewriting module: _sqlite3 [assertion]
      early skip of rewriting module: pymysql [assertion]
      early skip of rewriting module: astropy [assertion]
      early skip of rewriting module: astropy.version [assertion]
      early skip of rewriting module: numpy [assertion]
      early skip of rewriting module: numpy._globals [assertion]
      early skip of rewriting module: numpy.__config__ [assertion]
      early skip of rewriting module: numpy.version [assertion]
      early skip of rewriting module: numpy._distributor_init [assertion]
      early skip of rewriting module: numpy.core [assertion]
      early skip of rewriting module: numpy.core.multiarray [assertion]
      early skip of rewriting module: numpy.core.overrides [assertion]
      early skip of rewriting module: numpy.core._multiarray_umath [assertion]
      early skip of rewriting module: numpy.compat [assertion]
      early skip of rewriting module: numpy.compat._inspect [assertion]
      early skip of rewriting module: numpy.compat.py3k [assertion]
      early skip of rewriting module: pickle5 [assertion]
      early skip of rewriting module: numpy.core.umath [assertion]
      early skip of rewriting module: numpy.core.numerictypes [assertion]
      early skip of rewriting module: numpy.core._string_helpers [assertion]
      early skip of rewriting module: numpy.core._type_aliases [assertion]
      early skip of rewriting module: numpy.core._dtype [assertion]
      early skip of rewriting module: numpy.core.numeric [assertion]
      early skip of rewriting module: numpy.core.shape_base [assertion]
      early skip of rewriting module: numpy.core._asarray [assertion]
      early skip of rewriting module: numpy.core.fromnumeric [assertion]
      early skip of rewriting module: numpy.core._methods [assertion]
      early skip of rewriting module: numpy.core._exceptions [assertion]
      early skip of rewriting module: numpy.core._ufunc_config [assertion]
      early skip of rewriting module: numpy.core.arrayprint [assertion]
      early skip of rewriting module: numpy.core.defchararray [assertion]
      early skip of rewriting module: numpy.core.records [assertion]
      early skip of rewriting module: numpy.core.memmap [assertion]
      early skip of rewriting module: numpy.core.function_base [assertion]
      early skip of rewriting module: numpy.core.machar [assertion]
      early skip of rewriting module: numpy.core.getlimits [assertion]
      early skip of rewriting module: numpy.core.einsumfunc [assertion]
      early skip of rewriting module: numpy.core._add_newdocs [assertion]
      early skip of rewriting module: numpy.core._multiarray_tests [assertion]
      early skip of rewriting module: numpy.core._dtype_ctypes [assertion]
      early skip of rewriting module: numpy.core._internal [assertion]
      early skip of rewriting module: numpy._pytesttester [assertion]
      early skip of rewriting module: numpy.lib [assertion]
      early skip of rewriting module: numpy.lib.mixins [assertion]
      early skip of rewriting module: numpy.lib.scimath [assertion]
      early skip of rewriting module: numpy.lib.type_check [assertion]
      early skip of rewriting module: numpy.lib.ufunclike [assertion]
      early skip of rewriting module: numpy.lib.index_tricks [assertion]
      early skip of rewriting module: numpy.matrixlib [assertion]
      early skip of rewriting module: numpy.matrixlib.defmatrix [assertion]
      early skip of rewriting module: numpy.linalg [assertion]
      early skip of rewriting module: numpy.linalg.linalg [assertion]
      early skip of rewriting module: numpy.lib.twodim_base [assertion]
      early skip of rewriting module: numpy.linalg.lapack_lite [assertion]
      early skip of rewriting module: numpy.linalg._umath_linalg [assertion]
      early skip of rewriting module: numpy.lib.function_base [assertion]
      early skip of rewriting module: numpy.lib.histograms [assertion]
      early skip of rewriting module: numpy.lib.stride_tricks [assertion]
      early skip of rewriting module: numpy.lib.nanfunctions [assertion]
      early skip of rewriting module: numpy.lib.shape_base [assertion]
      early skip of rewriting module: numpy.lib.polynomial [assertion]
      early skip of rewriting module: numpy.lib.utils [assertion]
      early skip of rewriting module: numpy.lib.arraysetops [assertion]
      early skip of rewriting module: numpy.lib.npyio [assertion]
      early skip of rewriting module: numpy.lib.format [assertion]
      early skip of rewriting module: numpy.lib._datasource [assertion]
      early skip of rewriting module: numpy.lib._iotools [assertion]
      early skip of rewriting module: numpy.lib.financial [assertion]
      early skip of rewriting module: numpy.lib.arrayterator [assertion]
      early skip of rewriting module: numpy.lib.arraypad [assertion]
      early skip of rewriting module: numpy.lib._version [assertion]
      early skip of rewriting module: numpy.fft [assertion]
      early skip of rewriting module: numpy.fft._pocketfft [assertion]
      early skip of rewriting module: numpy.fft._pocketfft_internal [assertion]
      early skip of rewriting module: numpy.fft.helper [assertion]
      early skip of rewriting module: numpy.polynomial [assertion]
      early skip of rewriting module: numpy.polynomial.polynomial [assertion]
      early skip of rewriting module: numpy.polynomial.polyutils [assertion]
      early skip of rewriting module: numpy.polynomial._polybase [assertion]
      early skip of rewriting module: numpy.polynomial.chebyshev [assertion]
      early skip of rewriting module: numpy.polynomial.legendre [assertion]
      early skip of rewriting module: numpy.polynomial.hermite [assertion]
      early skip of rewriting module: numpy.polynomial.hermite_e [assertion]
      early skip of rewriting module: numpy.polynomial.laguerre [assertion]
      early skip of rewriting module: numpy.random [assertion]
      early skip of rewriting module: numpy.random._pickle [assertion]
      early skip of rewriting module: numpy.random.mtrand [assertion]
      early skip of rewriting module: numpy.random._bit_generator [assertion]
      early skip of rewriting module: numpy.random._common [assertion]
      early skip of rewriting module: secrets [assertion]
      early skip of rewriting module: numpy.random._bounded_integers [assertion]
      early skip of rewriting module: numpy.random._mt19937 [assertion]
      early skip of rewriting module: numpy.random._philox [assertion]
      early skip of rewriting module: numpy.random._pcg64 [assertion]
      early skip of rewriting module: numpy.random._sfc64 [assertion]
      early skip of rewriting module: numpy.random._generator [assertion]
      early skip of rewriting module: numpy.ctypeslib [assertion]
      early skip of rewriting module: numpy.ma [assertion]
      early skip of rewriting module: numpy.ma.core [assertion]
      early skip of rewriting module: numpy.ma.extras [assertion]
      early skip of rewriting module: astropy.utils [assertion]
      early skip of rewriting module: astropy.utils.codegen [assertion]
      early skip of rewriting module: astropy.utils.introspection [assertion]
      early skip of rewriting module: astropy.utils.decorators [assertion]
      early skip of rewriting module: astropy.utils.exceptions [assertion]
      early skip of rewriting module: astropy.utils.misc [assertion]
      early skip of rewriting module: astropy.config [assertion]
      early skip of rewriting module: astropy.config.paths [assertion]
      early skip of rewriting module: astropy.config.configuration [assertion]
      early skip of rewriting module: astropy.extern [assertion]
      early skip of rewriting module: astropy.extern.configobj [assertion]
      early skip of rewriting module: astropy.extern.configobj.configobj [assertion]
      early skip of rewriting module: astropy.extern.configobj.validate [assertion]
      early skip of rewriting module: astropy.config.affiliated [assertion]
      find_module called for: astropy.tests [assertion]
      early skip of rewriting module: astropy.tests.runner [assertion]
      early skip of rewriting module: astropy.logger [assertion]
      early skip of rewriting module: astropy.utils._compiler [assertion]
      early skip of rewriting module: astropy.time [assertion]
      early skip of rewriting module: astropy.time.formats [assertion]
      early skip of rewriting module: astropy.units [assertion]
      early skip of rewriting module: astropy.units.core [assertion]
      early skip of rewriting module: astropy.units.utils [assertion]
      early skip of rewriting module: fractions [assertion]
      early skip of rewriting module: astropy.units.format [assertion]
      early skip of rewriting module: astropy.units.format.base [assertion]
      early skip of rewriting module: astropy.units.format.generic [assertion]
      early skip of rewriting module: astropy.units.format.utils [assertion]
      early skip of rewriting module: astropy.units.format.cds [assertion]
      early skip of rewriting module: astropy.units.format.console [assertion]
      early skip of rewriting module: astropy.units.format.fits [assertion]
      early skip of rewriting module: astropy.units.format.latex [assertion]
      early skip of rewriting module: astropy.units.format.ogip [assertion]
      early skip of rewriting module: astropy.units.format.unicode_format [assertion]
      early skip of rewriting module: astropy.units.format.vounit [assertion]
      early skip of rewriting module: astropy.units.quantity [assertion]
      early skip of rewriting module: astropy.utils.compat [assertion]
      early skip of rewriting module: astropy.utils.compat.misc [assertion]
      early skip of rewriting module: astropy.utils.compat.numpycompat [assertion]
      early skip of rewriting module: astropy.utils.data_info [assertion]
      early skip of rewriting module: astropy.utils.metadata [assertion]
      early skip of rewriting module: astropy.units.quantity_helper [assertion]
      early skip of rewriting module: astropy.units.quantity_helper.converters [assertion]
      early skip of rewriting module: astropy.units.quantity_helper.helpers [assertion]
      early skip of rewriting module: astropy.units.quantity_helper.scipy_special [assertion]
      early skip of rewriting module: astropy.units.quantity_helper.erfa [assertion]
      early skip of rewriting module: astropy.units.si [assertion]
      early skip of rewriting module: astropy.constants [assertion]
      early skip of rewriting module: astropy.constants.constant [assertion]
      early skip of rewriting module: astropy.constants.si [assertion]
      early skip of rewriting module: astropy.constants.codata2014 [assertion]
      early skip of rewriting module: astropy.constants.iau2015 [assertion]
      early skip of rewriting module: astropy.constants.cgs [assertion]
      early skip of rewriting module: astropy.constants.utils [assertion]
      early skip of rewriting module: astropy.units.cgs [assertion]
      early skip of rewriting module: astropy.units.astrophys [assertion]
      early skip of rewriting module: astropy.extern.ply [assertion]
      early skip of rewriting module: astropy.extern.ply.yacc [assertion]
      early skip of rewriting module: astropy.units.format.generic_parsetab [assertion]
      early skip of rewriting module: astropy.extern.ply.lex [assertion]
      early skip of rewriting module: astropy.units.format.generic_lextab [assertion]
      early skip of rewriting module: astropy.units.photometric [assertion]
      early skip of rewriting module: astropy.units.function [assertion]
      early skip of rewriting module: astropy.units.function.core [assertion]
      early skip of rewriting module: astropy.units.function.logarithmic [assertion]
      early skip of rewriting module: astropy.units.function.units [assertion]
      early skip of rewriting module: astropy.units.function.mixin [assertion]
      early skip of rewriting module: astropy.units.physical [assertion]
      early skip of rewriting module: astropy.units.imperial [assertion]
      early skip of rewriting module: astropy.units.equivalencies [assertion]
      early skip of rewriting module: astropy.units.function.magnitude_zero_points [assertion]
      early skip of rewriting module: astropy.units.decorators [assertion]
      early skip of rewriting module: astropy._erfa [assertion]
      early skip of rewriting module: astropy._erfa.core [assertion]
      early skip of rewriting module: astropy._erfa.ufunc [assertion]
      early skip of rewriting module: astropy.time.utils [assertion]
      early skip of rewriting module: astropy.time.core [assertion]
      early skip of rewriting module: astropy.extern._strptime [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __name__
            obj: api.tests.tests_auth_api
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __doc__
            obj: Test users' authentication through the API.
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __package__
            obj: api.tests
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __spec__
            obj: ModuleSpec(name='api.tests.tests_auth_api', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>, origin='/usr/src/love/manager/api/tests/tests_auth_api.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __file__
            obj: /usr/src/love/manager/api/tests/tests_auth_api.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __cached__
            obj: /usr/src/love/manager/api/tests/__pycache__/tests_auth_api.cpython-37.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python3.7/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: datetime
            obj: <module 'datetime' from '/usr/local/lib/python3.7/datetime.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: TestCase
            obj: <class 'django.test.testcases.TestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase TestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: reverse
            obj: <function reverse at 0x7f34136a7e18>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: User
            obj: <class 'django.contrib.auth.models.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: Permission
            obj: <class 'django.contrib.auth.models.Permission'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: freeze_time
            obj: <function freeze_time at 0x7f341401c8c8>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: APIClient
            obj: <class 'rest_framework.test.APIClient'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: status
            obj: <module 'rest_framework.status' from '/usr/local/lib/python3.7/site-packages/rest_framework/status.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: Token
            obj: <class 'api.models.Token'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: settings
            obj: <Settings "manager.settings">
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: Time
            obj: <class 'astropy.time.core.Time'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: AuthApiTestCase
            obj: <class 'api.tests.tests_auth_api.AuthApiTestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase AuthApiTestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d739f40>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_auth_api.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'api/tests/tests_auth_api.py' lenresult=2 outcome='passed'> [hook]
    genitems <UnitTestCase TestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase TestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase TestCase>
      finish pytest_make_collect_report --> <CollectReport 'api/tests/tests_auth_api.py::TestCase' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'api/tests/tests_auth_api.py::TestCase' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase AuthApiTestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase AuthApiTestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase AuthApiTestCase>
      finish pytest_make_collect_report --> <CollectReport 'api/tests/tests_auth_api.py::AuthApiTestCase' lenresult=8 outcome='passed'> [hook]
    genitems <TestCaseFunction test_user_fails_to_validate_deleted_token> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_user_fails_to_validate_deleted_token>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_user_fails_to_validate_expired_token> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_user_fails_to_validate_expired_token>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_user_login> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_user_login>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_user_login_failed> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_user_login_failed>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_user_login_twice> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_user_login_twice>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_user_logout> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_user_logout>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_user_validate_token> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_user_validate_token>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_user_validate_token_fail> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_user_validate_token_fail>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'api/tests/tests_auth_api.py::AuthApiTestCase' lenresult=8 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'api/tests/tests_auth_api.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'api/tests/__init__.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /usr/src/love/manager/manager> [collection]
      pytest_collectstart [hook]
          collector: <Package /usr/src/love/manager/manager>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /usr/src/love/manager/manager>
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/manager/asgi.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/manager/asgi.py
            parent: <Package /usr/src/love/manager/manager>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/manager/routing.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/manager/routing.py
            parent: <Package /usr/src/love/manager/manager>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/manager/settings.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/manager/settings.py
            parent: <Package /usr/src/love/manager/manager>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/manager/urls.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/manager/urls.py
            parent: <Package /usr/src/love/manager/manager>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/manager/wsgi.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/manager/wsgi.py
            parent: <Package /usr/src/love/manager/manager>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'manager/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'manager/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /usr/src/love/manager/subscription> [collection]
      pytest_collectstart [hook]
          collector: <Package /usr/src/love/manager/subscription>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /usr/src/love/manager/subscription>
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/subscription/tests
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /usr/src/love/manager/subscription/tests
            parent: <Package /usr/src/love/manager/subscription>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/subscription/migrations
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /usr/src/love/manager/subscription/migrations
            parent: <Package /usr/src/love/manager/subscription>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/subscription/apps.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/subscription/apps.py
            parent: <Package /usr/src/love/manager/subscription>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/subscription/auth.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/subscription/auth.py
            parent: <Package /usr/src/love/manager/subscription>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/subscription/consumers.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/subscription/consumers.py
            parent: <Package /usr/src/love/manager/subscription>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/subscription/heartbeat_manager.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/subscription/heartbeat_manager.py
            parent: <Package /usr/src/love/manager/subscription>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/subscription/routing.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/subscription/routing.py
            parent: <Package /usr/src/love/manager/subscription>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/subscription/migrations/__init__.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/subscription/tests/test_commands.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/subscription/tests/test_connection.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/subscription/tests/test_heartbeat.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/subscription/tests/test_lovecsc_subscriptions.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/subscription/tests/test_subscriptions.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
      finish pytest_make_collect_report --> <CollectReport 'subscription/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /usr/src/love/manager/subscription/migrations> [collection]
      pytest_collectstart [hook]
          collector: <Package /usr/src/love/manager/subscription/migrations>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /usr/src/love/manager/subscription/migrations>
      finish pytest_make_collect_report --> <CollectReport 'subscription/migrations/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/migrations/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module subscription/tests/test_commands.py> [collection]
      pytest_collectstart [hook]
          collector: <Module subscription/tests/test_commands.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module subscription/tests/test_commands.py>
      find_module called for: test_commands [assertion]
      matched test file '/usr/src/love/manager/subscription/tests/test_commands.py' [assertion]
      found cached rewritten pyc for '/usr/src/love/manager/subscription/tests/test_commands.py' [assertion]
      early skip of rewriting module: channels.testing [assertion]
      early skip of rewriting module: asgiref.testing [assertion]
      early skip of rewriting module: asgiref.compatibility [assertion]
      early skip of rewriting module: asgiref.timeout [assertion]
      early skip of rewriting module: channels.testing.http [assertion]
      early skip of rewriting module: channels.testing.live [assertion]
      early skip of rewriting module: daphne.testing [assertion]
      early skip of rewriting module: multiprocessing [assertion]
      early skip of rewriting module: multiprocessing.context [assertion]
      early skip of rewriting module: multiprocessing.process [assertion]
      early skip of rewriting module: multiprocessing.reduction [assertion]
      early skip of rewriting module: channels.testing.websocket [assertion]
      early skip of rewriting module: manager.routing [assertion]
      early skip of rewriting module: subscription.routing [assertion]
      early skip of rewriting module: django.conf.urls [assertion]
      early skip of rewriting module: django.views.defaults [assertion]
      early skip of rewriting module: subscription.auth [assertion]
      early skip of rewriting module: subscription.consumers [assertion]
      early skip of rewriting module: channels.generic [assertion]
      early skip of rewriting module: channels.generic.websocket [assertion]
      early skip of rewriting module: channels.consumer [assertion]
      early skip of rewriting module: channels.db [assertion]
      early skip of rewriting module: channels.utils [assertion]
      early skip of rewriting module: subscription.heartbeat_manager [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __name__
            obj: test_commands
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __doc__
            obj: Tests for the sending of comands.
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __spec__
            obj: ModuleSpec(name='test_commands', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>, origin='/usr/src/love/manager/subscription/tests/test_commands.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __file__
            obj: /usr/src/love/manager/subscription/tests/test_commands.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __cached__
            obj: /usr/src/love/manager/subscription/tests/__pycache__/test_commands.cpython-37.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python3.7/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: pytest
            obj: <module 'pytest' from '/usr/local/lib/python3.7/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: User
            obj: <class 'django.contrib.auth.models.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: Permission
            obj: <class 'django.contrib.auth.models.Permission'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: WebsocketCommunicator
            obj: <class 'channels.testing.websocket.WebsocketCommunicator'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: application
            obj: <channels.routing.ProtocolTypeRouter object at 0x7f33f91746a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: Token
            obj: <class 'api.models.Token'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: TestCommands
            obj: <class 'test_commands.TestCommands'>
        finish pytest_pycollect_makeitem --> <Class TestCommands> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d739f40>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_commands.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'subscription/tests/test_commands.py' lenresult=1 outcome='passed'> [hook]
    genitems <Class TestCommands> [collection]
      pytest_collectstart [hook]
          collector: <Class TestCommands>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestCommands>
      finish pytest_make_collect_report --> <CollectReport 'subscription/tests/test_commands.py::TestCommands' lenresult=1 outcome='passed'> [hook]
    genitems <Instance ()> [collection]
      pytest_collectstart [hook]
          collector: <Instance ()>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Instance ()>
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __module__
            obj: test_commands
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __doc__
            obj: Test that clients can or cannot send commands depending on different conditions.
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: categories
            obj: ['event', 'telemetry', 'cmd']
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: cscs
            obj: ['ScriptQueue', 'ATDome']
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: salindices
            obj: [1, 2]
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: streams
            obj: ['stream1', 'stream2']
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: combinations
            obj: []
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: no_reception_timeout
            obj: 0.001
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: setup_method
            obj: <function TestCommands.setup_method at 0x7f33f94abae8>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: build_messages
            obj: <function TestCommands.build_messages at 0x7f33f918ea60>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_authorized_user_can_send_command
            obj: <function TestCommands.test_authorized_user_can_send_command at 0x7f33f91941e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f912d8d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_authorized_user_can_send_command>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_unauthorized_user_cannot_send_command
            obj: <function TestCommands.test_unauthorized_user_cannot_send_command at 0x7f33f9125840>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f917fe48>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_unauthorized_user_cannot_send_command>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_authorized_user_gets_ack
            obj: <function TestCommands.test_authorized_user_gets_ack at 0x7f33f91258c8>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f9136080>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_authorized_user_gets_ack>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __dict__
            obj: <attribute '__dict__' of 'TestCommands' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __weakref__
            obj: <attribute '__weakref__' of 'TestCommands' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: _Class__pytest_setup_method
            obj: <function Class._inject_setup_method_fixture.<locals>.xunit_setup_method_fixture at 0x7f33f91259d8>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __init__
            obj: <slot wrapper '__init__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d741880>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __dir__
            obj: <method '__dir__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'subscription/tests/test_commands.py::TestCommands' lenresult=3 outcome='passed'> [hook]
    genitems <Function test_authorized_user_can_send_command> [collection]
      pytest_itemcollected [hook]
          item: <Function test_authorized_user_can_send_command>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_unauthorized_user_cannot_send_command> [collection]
      pytest_itemcollected [hook]
          item: <Function test_unauthorized_user_cannot_send_command>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_authorized_user_gets_ack> [collection]
      pytest_itemcollected [hook]
          item: <Function test_authorized_user_gets_ack>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/tests/test_commands.py::TestCommands' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/tests/test_commands.py::TestCommands' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/tests/test_commands.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module subscription/tests/test_connection.py> [collection]
      pytest_collectstart [hook]
          collector: <Module subscription/tests/test_connection.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module subscription/tests/test_connection.py>
      find_module called for: test_connection [assertion]
      matched test file '/usr/src/love/manager/subscription/tests/test_connection.py' [assertion]
      found cached rewritten pyc for '/usr/src/love/manager/subscription/tests/test_connection.py' [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __name__
            obj: test_connection
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __doc__
            obj: Tests for the connection of users.
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __spec__
            obj: ModuleSpec(name='test_connection', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>, origin='/usr/src/love/manager/subscription/tests/test_connection.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __file__
            obj: /usr/src/love/manager/subscription/tests/test_connection.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __cached__
            obj: /usr/src/love/manager/subscription/tests/__pycache__/test_connection.cpython-37.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python3.7/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: pytest
            obj: <module 'pytest' from '/usr/local/lib/python3.7/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: asyncio
            obj: <module 'asyncio' from '/usr/local/lib/python3.7/asyncio/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: User
            obj: <class 'django.contrib.auth.models.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: WebsocketCommunicator
            obj: <class 'channels.testing.websocket.WebsocketCommunicator'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: get_channel_layer
            obj: <function get_channel_layer at 0x7f3410acb840>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: application
            obj: <channels.routing.ProtocolTypeRouter object at 0x7f33f91746a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: PROCESS_CONNECTION_PASS
            obj: my_dev_password
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: Token
            obj: <class 'api.models.Token'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: TestClientConnection
            obj: <class 'test_connection.TestClientConnection'>
        finish pytest_pycollect_makeitem --> <Class TestClientConnection> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d739f40>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_connection.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'subscription/tests/test_connection.py' lenresult=1 outcome='passed'> [hook]
    genitems <Class TestClientConnection> [collection]
      pytest_collectstart [hook]
          collector: <Class TestClientConnection>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestClientConnection>
      finish pytest_make_collect_report --> <CollectReport 'subscription/tests/test_connection.py::TestClientConnection' lenresult=1 outcome='passed'> [hook]
    genitems <Instance ()> [collection]
      pytest_collectstart [hook]
          collector: <Instance ()>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Instance ()>
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __module__
            obj: test_connection
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __doc__
            obj: Test that clients can or cannot connect depending on different conditions.
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_connection_with_token
            obj: <function TestClientConnection.test_connection_with_token at 0x7f33f913b0d0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f9143278>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_connection_with_token>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_connection_with_password
            obj: <function TestClientConnection.test_connection_with_password at 0x7f33f913b158>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f9143e80>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_connection_with_password>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_connection_failed_for_invalid_token
            obj: <function TestClientConnection.test_connection_failed_for_invalid_token at 0x7f33f913b1e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f9148ac8>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_connection_failed_for_invalid_token>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_connection_failed_for_invalid_password
            obj: <function TestClientConnection.test_connection_failed_for_invalid_password at 0x7f33f913b268>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f9150710>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_connection_failed_for_invalid_password>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_connection_interrupted_when_logout_message_is_sent
            obj: <function TestClientConnection.test_connection_interrupted_when_logout_message_is_sent at 0x7f33f913b2f0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f9150a90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_connection_interrupted_when_logout_message_is_sent>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_connection_interrupted_when_token_is_deleted
            obj: <function TestClientConnection.test_connection_interrupted_when_token_is_deleted at 0x7f33f913b378>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f91546d8>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_connection_interrupted_when_token_is_deleted>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __dict__
            obj: <attribute '__dict__' of 'TestClientConnection' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __weakref__
            obj: <attribute '__weakref__' of 'TestClientConnection' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __init__
            obj: <slot wrapper '__init__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d741880>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __dir__
            obj: <method '__dir__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'subscription/tests/test_connection.py::TestClientConnection' lenresult=6 outcome='passed'> [hook]
    genitems <Function test_connection_with_token> [collection]
      pytest_itemcollected [hook]
          item: <Function test_connection_with_token>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_connection_with_password> [collection]
      pytest_itemcollected [hook]
          item: <Function test_connection_with_password>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_connection_failed_for_invalid_token> [collection]
      pytest_itemcollected [hook]
          item: <Function test_connection_failed_for_invalid_token>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_connection_failed_for_invalid_password> [collection]
      pytest_itemcollected [hook]
          item: <Function test_connection_failed_for_invalid_password>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_connection_interrupted_when_logout_message_is_sent> [collection]
      pytest_itemcollected [hook]
          item: <Function test_connection_interrupted_when_logout_message_is_sent>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_connection_interrupted_when_token_is_deleted> [collection]
      pytest_itemcollected [hook]
          item: <Function test_connection_interrupted_when_token_is_deleted>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/tests/test_connection.py::TestClientConnection' lenresult=6 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/tests/test_connection.py::TestClientConnection' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/tests/test_connection.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module subscription/tests/test_heartbeat.py> [collection]
      pytest_collectstart [hook]
          collector: <Module subscription/tests/test_heartbeat.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module subscription/tests/test_heartbeat.py>
      find_module called for: test_heartbeat [assertion]
      matched test file '/usr/src/love/manager/subscription/tests/test_heartbeat.py' [assertion]
      found cached rewritten pyc for '/usr/src/love/manager/subscription/tests/test_heartbeat.py' [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __name__
            obj: test_heartbeat
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __doc__
            obj: Tests for the subscription of consumers to love_csc streams.
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __spec__
            obj: ModuleSpec(name='test_heartbeat', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>, origin='/usr/src/love/manager/subscription/tests/test_heartbeat.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __file__
            obj: /usr/src/love/manager/subscription/tests/test_heartbeat.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __cached__
            obj: /usr/src/love/manager/subscription/tests/__pycache__/test_heartbeat.cpython-37.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python3.7/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: asyncio
            obj: <module 'asyncio' from '/usr/local/lib/python3.7/asyncio/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: pytest
            obj: <module 'pytest' from '/usr/local/lib/python3.7/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: User
            obj: <class 'django.contrib.auth.models.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: Permission
            obj: <class 'django.contrib.auth.models.Permission'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: WebsocketCommunicator
            obj: <class 'channels.testing.websocket.WebsocketCommunicator'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: application
            obj: <channels.routing.ProtocolTypeRouter object at 0x7f33f91746a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: Token
            obj: <class 'api.models.Token'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: HeartbeatManager
            obj: <class 'subscription.heartbeat_manager.HeartbeatManager'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: TestHeartbeat
            obj: <class 'test_heartbeat.TestHeartbeat'>
        finish pytest_pycollect_makeitem --> <Class TestHeartbeat> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d739f40>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_heartbeat.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'subscription/tests/test_heartbeat.py' lenresult=1 outcome='passed'> [hook]
    genitems <Class TestHeartbeat> [collection]
      pytest_collectstart [hook]
          collector: <Class TestHeartbeat>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestHeartbeat>
      finish pytest_make_collect_report --> <CollectReport 'subscription/tests/test_heartbeat.py::TestHeartbeat' lenresult=1 outcome='passed'> [hook]
    genitems <Instance ()> [collection]
      pytest_collectstart [hook]
          collector: <Instance ()>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Instance ()>
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __module__
            obj: test_heartbeat
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: setup_method
            obj: <function TestHeartbeat.setup_method at 0x7f33f913b048>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_join_and_leave_subscription
            obj: <function TestHeartbeat.test_join_and_leave_subscription at 0x7f33f913b510>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f9158710>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_join_and_leave_subscription>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __dict__
            obj: <attribute '__dict__' of 'TestHeartbeat' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __weakref__
            obj: <attribute '__weakref__' of 'TestHeartbeat' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: _Class__pytest_setup_method
            obj: <function Class._inject_setup_method_fixture.<locals>.xunit_setup_method_fixture at 0x7f33f9125ae8>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __init__
            obj: <slot wrapper '__init__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d741880>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __dir__
            obj: <method '__dir__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'subscription/tests/test_heartbeat.py::TestHeartbeat' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_join_and_leave_subscription> [collection]
      pytest_itemcollected [hook]
          item: <Function test_join_and_leave_subscription>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/tests/test_heartbeat.py::TestHeartbeat' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/tests/test_heartbeat.py::TestHeartbeat' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/tests/test_heartbeat.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module subscription/tests/test_lovecsc_subscriptions.py> [collection]
      pytest_collectstart [hook]
          collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
      find_module called for: test_lovecsc_subscriptions [assertion]
      matched test file '/usr/src/love/manager/subscription/tests/test_lovecsc_subscriptions.py' [assertion]
      found cached rewritten pyc for '/usr/src/love/manager/subscription/tests/test_lovecsc_subscriptions.py' [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __name__
            obj: test_lovecsc_subscriptions
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __doc__
            obj: Tests for the subscription of consumers to love_csc streams.
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __spec__
            obj: ModuleSpec(name='test_lovecsc_subscriptions', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>, origin='/usr/src/love/manager/subscription/tests/test_lovecsc_subscriptions.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __file__
            obj: /usr/src/love/manager/subscription/tests/test_lovecsc_subscriptions.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __cached__
            obj: /usr/src/love/manager/subscription/tests/__pycache__/test_lovecsc_subscriptions.cpython-37.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python3.7/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: asyncio
            obj: <module 'asyncio' from '/usr/local/lib/python3.7/asyncio/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: pytest
            obj: <module 'pytest' from '/usr/local/lib/python3.7/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: User
            obj: <class 'django.contrib.auth.models.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: Permission
            obj: <class 'django.contrib.auth.models.Permission'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: WebsocketCommunicator
            obj: <class 'channels.testing.websocket.WebsocketCommunicator'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: application
            obj: <channels.routing.ProtocolTypeRouter object at 0x7f33f91746a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: Token
            obj: <class 'api.models.Token'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: TestLOVECscSubscriptions
            obj: <class 'test_lovecsc_subscriptions.TestLOVECscSubscriptions'>
        finish pytest_pycollect_makeitem --> <Class TestLOVECscSubscriptions> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d739f40>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_lovecsc_subscriptions.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'subscription/tests/test_lovecsc_subscriptions.py' lenresult=1 outcome='passed'> [hook]
    genitems <Class TestLOVECscSubscriptions> [collection]
      pytest_collectstart [hook]
          collector: <Class TestLOVECscSubscriptions>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestLOVECscSubscriptions>
      finish pytest_make_collect_report --> <CollectReport 'subscription/tests/test_lovecsc_subscriptions.py::TestLOVECscSubscriptions' lenresult=1 outcome='passed'> [hook]
    genitems <Instance ()> [collection]
      pytest_collectstart [hook]
          collector: <Instance ()>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Instance ()>
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __module__
            obj: test_lovecsc_subscriptions
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: setup_method
            obj: <function TestLOVECscSubscriptions.setup_method at 0x7f33f913b8c8>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_join_and_leave_subscription
            obj: <function TestLOVECscSubscriptions.test_join_and_leave_subscription at 0x7f33f913b950>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f91317f0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_join_and_leave_subscription>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_observinglog_to_lovecsc
            obj: <function TestLOVECscSubscriptions.test_observinglog_to_lovecsc at 0x7f33f913b9d8>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f9163518>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_observinglog_to_lovecsc>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __dict__
            obj: <attribute '__dict__' of 'TestLOVECscSubscriptions' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __weakref__
            obj: <attribute '__weakref__' of 'TestLOVECscSubscriptions' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: _Class__pytest_setup_method
            obj: <function Class._inject_setup_method_fixture.<locals>.xunit_setup_method_fixture at 0x7f33f913ba60>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __init__
            obj: <slot wrapper '__init__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d741880>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __dir__
            obj: <method '__dir__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'subscription/tests/test_lovecsc_subscriptions.py::TestLOVECscSubscriptions' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_join_and_leave_subscription> [collection]
      pytest_itemcollected [hook]
          item: <Function test_join_and_leave_subscription>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_observinglog_to_lovecsc> [collection]
      pytest_itemcollected [hook]
          item: <Function test_observinglog_to_lovecsc>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/tests/test_lovecsc_subscriptions.py::TestLOVECscSubscriptions' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/tests/test_lovecsc_subscriptions.py::TestLOVECscSubscriptions' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/tests/test_lovecsc_subscriptions.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module subscription/tests/test_subscriptions.py> [collection]
      pytest_collectstart [hook]
          collector: <Module subscription/tests/test_subscriptions.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module subscription/tests/test_subscriptions.py>
      find_module called for: test_subscriptions [assertion]
      matched test file '/usr/src/love/manager/subscription/tests/test_subscriptions.py' [assertion]
      found cached rewritten pyc for '/usr/src/love/manager/subscription/tests/test_subscriptions.py' [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __name__
            obj: test_subscriptions
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __doc__
            obj: Tests for the subscription of consumers to streams.
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __spec__
            obj: ModuleSpec(name='test_subscriptions', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>, origin='/usr/src/love/manager/subscription/tests/test_subscriptions.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __file__
            obj: /usr/src/love/manager/subscription/tests/test_subscriptions.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __cached__
            obj: /usr/src/love/manager/subscription/tests/__pycache__/test_subscriptions.cpython-37.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python3.7/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: asyncio
            obj: <module 'asyncio' from '/usr/local/lib/python3.7/asyncio/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: pytest
            obj: <module 'pytest' from '/usr/local/lib/python3.7/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: User
            obj: <class 'django.contrib.auth.models.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: Permission
            obj: <class 'django.contrib.auth.models.Permission'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: WebsocketCommunicator
            obj: <class 'channels.testing.websocket.WebsocketCommunicator'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: application
            obj: <channels.routing.ProtocolTypeRouter object at 0x7f33f91746a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: Token
            obj: <class 'api.models.Token'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: TestSubscriptionCombinations
            obj: <class 'test_subscriptions.TestSubscriptionCombinations'>
        finish pytest_pycollect_makeitem --> <Class TestSubscriptionCombinations> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d739f40>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module subscription/tests/test_subscriptions.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'subscription/tests/test_subscriptions.py' lenresult=1 outcome='passed'> [hook]
    genitems <Class TestSubscriptionCombinations> [collection]
      pytest_collectstart [hook]
          collector: <Class TestSubscriptionCombinations>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestSubscriptionCombinations>
      finish pytest_make_collect_report --> <CollectReport 'subscription/tests/test_subscriptions.py::TestSubscriptionCombinations' lenresult=1 outcome='passed'> [hook]
    genitems <Instance ()> [collection]
      pytest_collectstart [hook]
          collector: <Instance ()>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Instance ()>
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __module__
            obj: test_subscriptions
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __doc__
            obj: Test that clients can or cannot establish to subscriptions depending on different conditions.
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: categories
            obj: ['event', 'telemetry', 'cmd']
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: cscs
            obj: ['ScriptQueue', 'ATDome']
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: salindices
            obj: [1, 2]
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: streams
            obj: ['stream1', 'stream2']
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: combinations
            obj: []
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: no_reception_timeout
            obj: 0.001
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: setup_method
            obj: <function TestSubscriptionCombinations.setup_method at 0x7f33f913bc80>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: build_messages
            obj: <function TestSubscriptionCombinations.build_messages at 0x7f33f913bd08>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_join_and_leave_every_subscription
            obj: <function TestSubscriptionCombinations.test_join_and_leave_every_subscription at 0x7f33f913bd90>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f90f3048>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_join_and_leave_every_subscription>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_join_and_leave_all_subscription
            obj: <function TestSubscriptionCombinations.test_join_and_leave_all_subscription at 0x7f33f913be18>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f90f3d30>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_join_and_leave_all_subscription>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_receive_messages_from_every_subscription
            obj: <function TestSubscriptionCombinations.test_receive_messages_from_every_subscription at 0x7f33f913bea0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f90f6a58>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_receive_messages_from_every_subscription>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_receive_messages_from_all_subscription
            obj: <function TestSubscriptionCombinations.test_receive_messages_from_all_subscription at 0x7f33f913bf28>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f90fa780>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_receive_messages_from_all_subscription>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_receive_message_for_subscribed_group_only
            obj: <function TestSubscriptionCombinations.test_receive_message_for_subscribed_group_only at 0x7f33f90eb048>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f90ff4a8>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_receive_message_for_subscribed_group_only>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_receive_message_for_subscribed_groups_only
            obj: <function TestSubscriptionCombinations.test_receive_message_for_subscribed_groups_only at 0x7f33f90eb0d0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f90f6e10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_receive_message_for_subscribed_groups_only>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_receive_part_of_message_for_subscribed_groups_only
            obj: <function TestSubscriptionCombinations.test_receive_part_of_message_for_subscribed_groups_only at 0x7f33f90eb158>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f9103438>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_receive_part_of_message_for_subscribed_groups_only>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_request_initial_state_when_subscribing_to_event
            obj: <function TestSubscriptionCombinations.test_request_initial_state_when_subscribing_to_event at 0x7f33f90eb1e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f33f9104160>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_request_initial_state_when_subscribing_to_event>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __dict__
            obj: <attribute '__dict__' of 'TestSubscriptionCombinations' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __weakref__
            obj: <attribute '__weakref__' of 'TestSubscriptionCombinations' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: _Class__pytest_setup_method
            obj: <function Class._inject_setup_method_fixture.<locals>.xunit_setup_method_fixture at 0x7f33f90eb598>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __init__
            obj: <slot wrapper '__init__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d741880>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __dir__
            obj: <method '__dir__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'subscription/tests/test_subscriptions.py::TestSubscriptionCombinations' lenresult=8 outcome='passed'> [hook]
    genitems <Function test_join_and_leave_every_subscription> [collection]
      pytest_itemcollected [hook]
          item: <Function test_join_and_leave_every_subscription>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_join_and_leave_all_subscription> [collection]
      pytest_itemcollected [hook]
          item: <Function test_join_and_leave_all_subscription>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_receive_messages_from_every_subscription> [collection]
      pytest_itemcollected [hook]
          item: <Function test_receive_messages_from_every_subscription>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_receive_messages_from_all_subscription> [collection]
      pytest_itemcollected [hook]
          item: <Function test_receive_messages_from_all_subscription>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_receive_message_for_subscribed_group_only> [collection]
      pytest_itemcollected [hook]
          item: <Function test_receive_message_for_subscribed_group_only>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_receive_message_for_subscribed_groups_only> [collection]
      pytest_itemcollected [hook]
          item: <Function test_receive_message_for_subscribed_groups_only>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_receive_part_of_message_for_subscribed_groups_only> [collection]
      pytest_itemcollected [hook]
          item: <Function test_receive_part_of_message_for_subscribed_groups_only>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_request_initial_state_when_subscribing_to_event> [collection]
      pytest_itemcollected [hook]
          item: <Function test_request_initial_state_when_subscribing_to_event>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/tests/test_subscriptions.py::TestSubscriptionCombinations' lenresult=8 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/tests/test_subscriptions.py::TestSubscriptionCombinations' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'subscription/tests/test_subscriptions.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /usr/src/love/manager/ui_framework> [collection]
      pytest_collectstart [hook]
          collector: <Package /usr/src/love/manager/ui_framework>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /usr/src/love/manager/ui_framework>
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /usr/src/love/manager/ui_framework/tests
            parent: <Package /usr/src/love/manager/ui_framework>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/migrations
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /usr/src/love/manager/ui_framework/migrations
            parent: <Package /usr/src/love/manager/ui_framework>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/fixtures
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /usr/src/love/manager/ui_framework/fixtures
            parent: <Package /usr/src/love/manager/ui_framework>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/admin.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/ui_framework/admin.py
            parent: <Package /usr/src/love/manager/ui_framework>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/apps.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/ui_framework/apps.py
            parent: <Package /usr/src/love/manager/ui_framework>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/models.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/ui_framework/models.py
            parent: <Package /usr/src/love/manager/ui_framework>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/serializers.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/ui_framework/serializers.py
            parent: <Package /usr/src/love/manager/ui_framework>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/urls.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/ui_framework/urls.py
            parent: <Package /usr/src/love/manager/ui_framework>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/views.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/ui_framework/views.py
            parent: <Package /usr/src/love/manager/ui_framework>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/fixtures/initial_data.json
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/migrations/__init__.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests/media
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /usr/src/love/manager/ui_framework/tests/media
            parent: <Package /usr/src/love/manager/ui_framework>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests/__init__.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests/media/mock
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /usr/src/love/manager/ui_framework/tests/media/mock
            parent: <Package /usr/src/love/manager/ui_framework>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests/media/thumbnails
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /usr/src/love/manager/ui_framework/tests/media/thumbnails
            parent: <Package /usr/src/love/manager/ui_framework>
        finish pytest_collect_directory --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /usr/src/love/manager/ui_framework/migrations> [collection]
      pytest_collectstart [hook]
          collector: <Package /usr/src/love/manager/ui_framework/migrations>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /usr/src/love/manager/ui_framework/migrations>
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/migrations/0001_initial.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/ui_framework/migrations/0001_initial.py
            parent: <Package /usr/src/love/manager/ui_framework/migrations>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/migrations/0002_view_data.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/ui_framework/migrations/0002_view_data.py
            parent: <Package /usr/src/love/manager/ui_framework/migrations>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/migrations/0003_view_thumbnail.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/ui_framework/migrations/0003_view_thumbnail.py
            parent: <Package /usr/src/love/manager/ui_framework/migrations>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/migrations/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/migrations/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /usr/src/love/manager/ui_framework/tests> [collection]
      pytest_collectstart [hook]
          collector: <Package /usr/src/love/manager/ui_framework/tests>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /usr/src/love/manager/ui_framework/tests>
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests/media
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /usr/src/love/manager/ui_framework/tests/media
            parent: <Package /usr/src/love/manager/ui_framework/tests>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests/test_view_thumbnail.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/ui_framework/tests/test_view_thumbnail.py
            parent: <Package /usr/src/love/manager/ui_framework/tests>
          pytest_pycollect_makemodule [hook]
              path: /usr/src/love/manager/ui_framework/tests/test_view_thumbnail.py
              parent: <Package /usr/src/love/manager/ui_framework/tests>
          finish pytest_pycollect_makemodule --> <Module test_view_thumbnail.py> [hook]
        finish pytest_collect_file --> [<Module test_view_thumbnail.py>] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests/tests_api.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/ui_framework/tests/tests_api.py
            parent: <Package /usr/src/love/manager/ui_framework/tests>
          pytest_pycollect_makemodule [hook]
              path: /usr/src/love/manager/ui_framework/tests/tests_api.py
              parent: <Package /usr/src/love/manager/ui_framework/tests>
          finish pytest_pycollect_makemodule --> <Module tests_api.py> [hook]
        finish pytest_collect_file --> [<Module tests_api.py>] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests/tests_custom_api.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/ui_framework/tests/tests_custom_api.py
            parent: <Package /usr/src/love/manager/ui_framework/tests>
          pytest_pycollect_makemodule [hook]
              path: /usr/src/love/manager/ui_framework/tests/tests_custom_api.py
              parent: <Package /usr/src/love/manager/ui_framework/tests>
          finish pytest_pycollect_makemodule --> <Module tests_custom_api.py> [hook]
        finish pytest_collect_file --> [<Module tests_custom_api.py>] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests/tests_models.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/ui_framework/tests/tests_models.py
            parent: <Package /usr/src/love/manager/ui_framework/tests>
          pytest_pycollect_makemodule [hook]
              path: /usr/src/love/manager/ui_framework/tests/tests_models.py
              parent: <Package /usr/src/love/manager/ui_framework/tests>
          finish pytest_pycollect_makemodule --> <Module tests_models.py> [hook]
        finish pytest_collect_file --> [<Module tests_models.py>] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests/utils.py
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /usr/src/love/manager/ui_framework/tests/utils.py
            parent: <Package /usr/src/love/manager/ui_framework/tests>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests/media/mock
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /usr/src/love/manager/ui_framework/tests/media/mock
            parent: <Package /usr/src/love/manager/ui_framework/tests>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests/media/thumbnails
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /usr/src/love/manager/ui_framework/tests/media/thumbnails
            parent: <Package /usr/src/love/manager/ui_framework/tests>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests/media/mock/test
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests/media/mock/test.png
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/love/manager/ui_framework/tests/media/thumbnails/.gitinclude
            config: <_pytest.config.Config object at 0x7f3418040dd8>
        finish pytest_ignore_collect --> False [hook]
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/__init__.py' lenresult=4 outcome='passed'> [hook]
    genitems <Module test_view_thumbnail.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_view_thumbnail.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_view_thumbnail.py>
      find_module called for: ui_framework.tests [assertion]
      find_module called for: ui_framework.tests.test_view_thumbnail [assertion]
      matched test file '/usr/src/love/manager/ui_framework/tests/test_view_thumbnail.py' [assertion]
      found cached rewritten pyc for '/usr/src/love/manager/ui_framework/tests/test_view_thumbnail.py' [assertion]
      early skip of rewriting module: filecmp [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __name__
            obj: ui_framework.tests.test_view_thumbnail
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __doc__
            obj: Test the UI Framework thumbnail behavior.
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __package__
            obj: ui_framework.tests
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __spec__
            obj: ModuleSpec(name='ui_framework.tests.test_view_thumbnail', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>, origin='/usr/src/love/manager/ui_framework/tests/test_view_thumbnail.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __file__
            obj: /usr/src/love/manager/ui_framework/tests/test_view_thumbnail.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __cached__
            obj: /usr/src/love/manager/ui_framework/tests/__pycache__/test_view_thumbnail.cpython-37.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python3.7/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: settings
            obj: <module 'manager.settings' from '/usr/src/love/manager/manager/settings.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: User
            obj: <class 'django.contrib.auth.models.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: Permission
            obj: <class 'django.contrib.auth.models.Permission'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: reverse
            obj: <function reverse at 0x7f34136a7e18>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: TestCase
            obj: <class 'django.test.testcases.TestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase TestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: status
            obj: <module 'rest_framework.status' from '/usr/local/lib/python3.7/site-packages/rest_framework/status.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: APIClient
            obj: <class 'rest_framework.test.APIClient'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: Token
            obj: <class 'api.models.Token'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: View
            obj: <class 'ui_framework.models.View'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: os
            obj: <module 'os' from '/usr/local/lib/python3.7/os.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: glob
            obj: <module 'glob' from '/usr/local/lib/python3.7/glob.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: filecmp
            obj: <module 'filecmp' from '/usr/local/lib/python3.7/filecmp.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: ViewThumbnailTestCase
            obj: <class 'ui_framework.tests.test_view_thumbnail.ViewThumbnailTestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase ViewThumbnailTestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d739f40>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_view_thumbnail.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/test_view_thumbnail.py' lenresult=2 outcome='passed'> [hook]
    genitems <UnitTestCase TestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase TestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase TestCase>
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/test_view_thumbnail.py::TestCase' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/test_view_thumbnail.py::TestCase' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase ViewThumbnailTestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase ViewThumbnailTestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase ViewThumbnailTestCase>
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/test_view_thumbnail.py::ViewThumbnailTestCase' lenresult=2 outcome='passed'> [hook]
    genitems <TestCaseFunction test_delete_thumbnail_file> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_delete_thumbnail_file>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_new_view> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_new_view>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/test_view_thumbnail.py::ViewThumbnailTestCase' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/test_view_thumbnail.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests_api.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests_api.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests_api.py>
      find_module called for: ui_framework.tests.tests_api [assertion]
      matched test file '/usr/src/love/manager/ui_framework/tests/tests_api.py' [assertion]
      found cached rewritten pyc for '/usr/src/love/manager/ui_framework/tests/tests_api.py' [assertion]
      early skip of rewriting module: ui_framework.tests.utils [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __name__
            obj: ui_framework.tests.tests_api
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __doc__
            obj: Test the UI Framework REST API.
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __package__
            obj: ui_framework.tests
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __spec__
            obj: ModuleSpec(name='ui_framework.tests.tests_api', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>, origin='/usr/src/love/manager/ui_framework/tests/tests_api.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __file__
            obj: /usr/src/love/manager/ui_framework/tests/tests_api.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __cached__
            obj: /usr/src/love/manager/ui_framework/tests/__pycache__/tests_api.cpython-37.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python3.7/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: User
            obj: <class 'django.contrib.auth.models.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: Permission
            obj: <class 'django.contrib.auth.models.Permission'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: reverse
            obj: <function reverse at 0x7f34136a7e18>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: status
            obj: <module 'rest_framework.status' from '/usr/local/lib/python3.7/site-packages/rest_framework/status.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: Token
            obj: <class 'api.models.Token'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: get_dict
            obj: <function get_dict at 0x7f33f910bf28>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: BaseTestCase
            obj: <class 'ui_framework.tests.utils.BaseTestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BaseTestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: UnauthenticatedCrudTestCase
            obj: <class 'ui_framework.tests.tests_api.UnauthenticatedCrudTestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase UnauthenticatedCrudTestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: UnauthorizedCrudTestCase
            obj: <class 'ui_framework.tests.tests_api.UnauthorizedCrudTestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase UnauthorizedCrudTestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: AuthorizedCrudTestCase
            obj: <class 'ui_framework.tests.tests_api.AuthorizedCrudTestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase AuthorizedCrudTestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d739f40>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_api.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/tests_api.py' lenresult=4 outcome='passed'> [hook]
    genitems <UnitTestCase UnauthenticatedCrudTestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase UnauthenticatedCrudTestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase UnauthenticatedCrudTestCase>
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/tests_api.py::UnauthenticatedCrudTestCase' lenresult=5 outcome='passed'> [hook]
    genitems <TestCaseFunction test_unauthenticated_create_objects> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_unauthenticated_create_objects>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_unauthenticated_delete_objects> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_unauthenticated_delete_objects>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_unauthenticated_list_objects> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_unauthenticated_list_objects>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_unauthenticated_retrieve_objects> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_unauthenticated_retrieve_objects>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_unauthenticated_update_objects> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_unauthenticated_update_objects>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/tests_api.py::UnauthenticatedCrudTestCase' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase UnauthorizedCrudTestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase UnauthorizedCrudTestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase UnauthorizedCrudTestCase>
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/tests_api.py::UnauthorizedCrudTestCase' lenresult=5 outcome='passed'> [hook]
    genitems <TestCaseFunction test_unauthorized_create_objects> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_unauthorized_create_objects>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_unauthorized_delete_objects> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_unauthorized_delete_objects>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_unauthorized_list_objects> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_unauthorized_list_objects>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_unauthorized_retrieve_objects> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_unauthorized_retrieve_objects>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_unauthorized_update_objects> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_unauthorized_update_objects>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/tests_api.py::UnauthorizedCrudTestCase' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase AuthorizedCrudTestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase AuthorizedCrudTestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase AuthorizedCrudTestCase>
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/tests_api.py::AuthorizedCrudTestCase' lenresult=5 outcome='passed'> [hook]
    genitems <TestCaseFunction test_authorized_create_objects> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_authorized_create_objects>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_authorized_delete_objects> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_authorized_delete_objects>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_authorized_list_objects> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_authorized_list_objects>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_authorized_retrieve_objects> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_authorized_retrieve_objects>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_authorized_update_objects> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_authorized_update_objects>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/tests_api.py::AuthorizedCrudTestCase' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BaseTestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BaseTestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BaseTestCase>
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/tests_api.py::BaseTestCase' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/tests_api.py::BaseTestCase' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/tests_api.py' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests_custom_api.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests_custom_api.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests_custom_api.py>
      find_module called for: ui_framework.tests.tests_custom_api [assertion]
      matched test file '/usr/src/love/manager/ui_framework/tests/tests_custom_api.py' [assertion]
      found cached rewritten pyc for '/usr/src/love/manager/ui_framework/tests/tests_custom_api.py' [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __name__
            obj: ui_framework.tests.tests_custom_api
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __doc__
            obj: Test the UI Framework Custom API.
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __package__
            obj: ui_framework.tests
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __spec__
            obj: ModuleSpec(name='ui_framework.tests.tests_custom_api', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>, origin='/usr/src/love/manager/ui_framework/tests/tests_custom_api.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __file__
            obj: /usr/src/love/manager/ui_framework/tests/tests_custom_api.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __cached__
            obj: /usr/src/love/manager/ui_framework/tests/__pycache__/tests_custom_api.cpython-37.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python3.7/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: settings
            obj: <Settings "manager.settings">
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: User
            obj: <class 'django.contrib.auth.models.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: Permission
            obj: <class 'django.contrib.auth.models.Permission'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: reverse
            obj: <function reverse at 0x7f34136a7e18>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: status
            obj: <module 'rest_framework.status' from '/usr/local/lib/python3.7/site-packages/rest_framework/status.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: Token
            obj: <class 'api.models.Token'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: View
            obj: <class 'ui_framework.models.View'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: BaseTestCase
            obj: <class 'ui_framework.tests.utils.BaseTestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BaseTestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: AuthorizedCrudTestCase
            obj: <class 'ui_framework.tests.tests_custom_api.AuthorizedCrudTestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase AuthorizedCrudTestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d739f40>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_custom_api.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/tests_custom_api.py' lenresult=2 outcome='passed'> [hook]
    genitems <UnitTestCase AuthorizedCrudTestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase AuthorizedCrudTestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase AuthorizedCrudTestCase>
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/tests_custom_api.py::AuthorizedCrudTestCase' lenresult=2 outcome='passed'> [hook]
    genitems <TestCaseFunction test_get_full_workspace> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_get_full_workspace>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_get_workspaces_with_view_name> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_get_workspaces_with_view_name>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/tests_custom_api.py::AuthorizedCrudTestCase' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BaseTestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BaseTestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BaseTestCase>
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/tests_custom_api.py::BaseTestCase' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/tests_custom_api.py::BaseTestCase' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/tests_custom_api.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests_models.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests_models.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests_models.py>
      find_module called for: ui_framework.tests.tests_models [assertion]
      matched test file '/usr/src/love/manager/ui_framework/tests/tests_models.py' [assertion]
      found cached rewritten pyc for '/usr/src/love/manager/ui_framework/tests/tests_models.py' [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __name__
            obj: ui_framework.tests.tests_models
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __doc__
            obj: Test the models.
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __package__
            obj: ui_framework.tests
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __spec__
            obj: ModuleSpec(name='ui_framework.tests.tests_models', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f34179d8898>, origin='/usr/src/love/manager/ui_framework/tests/tests_models.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __file__
            obj: /usr/src/love/manager/ui_framework/tests/tests_models.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __cached__
            obj: /usr/src/love/manager/ui_framework/tests/__pycache__/tests_models.cpython-37.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python3.7/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: TestCase
            obj: <class 'django.test.testcases.TestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase TestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: timezone
            obj: <module 'django.utils.timezone' from '/usr/local/lib/python3.7/site-packages/django/utils/timezone.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: freeze_time
            obj: <function freeze_time at 0x7f341401c8c8>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: Workspace
            obj: <class 'ui_framework.models.Workspace'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: View
            obj: <class 'ui_framework.models.View'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: WorkspaceView
            obj: <class 'ui_framework.models.WorkspaceView'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: WorkspaceModelTestCase
            obj: <class 'ui_framework.tests.tests_models.WorkspaceModelTestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase WorkspaceModelTestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: ViewModelTestCase
            obj: <class 'ui_framework.tests.tests_models.ViewModelTestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase ViewModelTestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: WorkspaceViewModelTestCase
            obj: <class 'ui_framework.tests.tests_models.WorkspaceViewModelTestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase WorkspaceViewModelTestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: WorkspaceAndViewsRelationsTestCase
            obj: <class 'ui_framework.tests.tests_models.WorkspaceAndViewsRelationsTestCase'>
        finish pytest_pycollect_makeitem --> <UnitTestCase WorkspaceAndViewsRelationsTestCase> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x7f341d739f40>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests_models.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/tests_models.py' lenresult=5 outcome='passed'> [hook]
    genitems <UnitTestCase TestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase TestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase TestCase>
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/tests_models.py::TestCase' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/tests_models.py::TestCase' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase WorkspaceModelTestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase WorkspaceModelTestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase WorkspaceModelTestCase>
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/tests_models.py::WorkspaceModelTestCase' lenresult=4 outcome='passed'> [hook]
    genitems <TestCaseFunction test_create_workspace> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_create_workspace>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_delete_workspace> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_delete_workspace>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_retrieve_workspace> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_retrieve_workspace>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_update_workspace> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_update_workspace>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/tests_models.py::WorkspaceModelTestCase' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase ViewModelTestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase ViewModelTestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase ViewModelTestCase>
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/tests_models.py::ViewModelTestCase' lenresult=4 outcome='passed'> [hook]
    genitems <TestCaseFunction test_create_view> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_create_view>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_delete_view> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_delete_view>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_retrieve_view> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_retrieve_view>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_update_view> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_update_view>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/tests_models.py::ViewModelTestCase' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase WorkspaceViewModelTestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase WorkspaceViewModelTestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase WorkspaceViewModelTestCase>
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/tests_models.py::WorkspaceViewModelTestCase' lenresult=4 outcome='passed'> [hook]
    genitems <TestCaseFunction test_create_workspace_view> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_create_workspace_view>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_delete_workspace_view> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_delete_workspace_view>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_retrieve_workspace_view> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_retrieve_workspace_view>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_update_workspace_view> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_update_workspace_view>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/tests_models.py::WorkspaceViewModelTestCase' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase WorkspaceAndViewsRelationsTestCase> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase WorkspaceAndViewsRelationsTestCase>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase WorkspaceAndViewsRelationsTestCase>
      finish pytest_make_collect_report --> <CollectReport 'ui_framework/tests/tests_models.py::WorkspaceAndViewsRelationsTestCase' lenresult=2 outcome='passed'> [hook]
    genitems <TestCaseFunction test_add_and_get_views_to_workspace> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_add_and_get_views_to_workspace>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_get_workspaces_from_a_view> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_get_workspaces_from_a_view>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/tests_models.py::WorkspaceAndViewsRelationsTestCase' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/tests_models.py' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'ui_framework/tests/__init__.py' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x7f3418040dd8>
          items: [<TestCaseFunction test_command_creates_users>, <TestCaseFunction test_command_sets_permissions_even_if_users_already_existed>, <TestCaseFunction test_invalid_config>, <TestCaseFunction test_syntax_error>, <TestCaseFunction test_valid_config>, <TestCaseFunction test_user_fails_to_validate_deleted_token>, <TestCaseFunction test_user_fails_to_validate_expired_token>, <TestCaseFunction test_user_login>, <TestCaseFunction test_user_login_failed>, <TestCaseFunction test_user_login_twice>, <TestCaseFunction test_user_logout>, <TestCaseFunction test_user_validate_token>, <TestCaseFunction test_user_validate_token_fail>, <Function test_authorized_user_can_send_command>, <Function test_unauthorized_user_cannot_send_command>, <Function test_authorized_user_gets_ack>, <Function test_connection_with_token>, <Function test_connection_with_password>, <Function test_connection_failed_for_invalid_token>, <Function test_connection_failed_for_invalid_password>, <Function test_connection_interrupted_when_logout_message_is_sent>, <Function test_connection_interrupted_when_token_is_deleted>, <Function test_join_and_leave_subscription>, <Function test_join_and_leave_subscription>, <Function test_observinglog_to_lovecsc>, <Function test_join_and_leave_every_subscription>, <Function test_join_and_leave_all_subscription>, <Function test_receive_messages_from_every_subscription>, <Function test_receive_messages_from_all_subscription>, <Function test_receive_message_for_subscribed_group_only>, <Function test_receive_message_for_subscribed_groups_only>, <Function test_receive_part_of_message_for_subscribed_groups_only>, <Function test_request_initial_state_when_subscribing_to_event>, <TestCaseFunction test_delete_thumbnail_file>, <TestCaseFunction test_new_view>, <TestCaseFunction test_unauthenticated_create_objects>, <TestCaseFunction test_unauthenticated_delete_objects>, <TestCaseFunction test_unauthenticated_list_objects>, <TestCaseFunction test_unauthenticated_retrieve_objects>, <TestCaseFunction test_unauthenticated_update_objects>, <TestCaseFunction test_unauthorized_create_objects>, <TestCaseFunction test_unauthorized_delete_objects>, <TestCaseFunction test_unauthorized_list_objects>, <TestCaseFunction test_unauthorized_retrieve_objects>, <TestCaseFunction test_unauthorized_update_objects>, <TestCaseFunction test_authorized_create_objects>, <TestCaseFunction test_authorized_delete_objects>, <TestCaseFunction test_authorized_list_objects>, <TestCaseFunction test_authorized_retrieve_objects>, <TestCaseFunction test_authorized_update_objects>, <TestCaseFunction test_get_full_workspace>, <TestCaseFunction test_get_workspaces_with_view_name>, <TestCaseFunction test_create_workspace>, <TestCaseFunction test_delete_workspace>, <TestCaseFunction test_retrieve_workspace>, <TestCaseFunction test_update_workspace>, <TestCaseFunction test_create_view>, <TestCaseFunction test_delete_view>, <TestCaseFunction test_retrieve_view>, <TestCaseFunction test_update_view>, <TestCaseFunction test_create_workspace_view>, <TestCaseFunction test_delete_workspace_view>, <TestCaseFunction test_retrieve_workspace_view>, <TestCaseFunction test_update_workspace_view>, <TestCaseFunction test_add_and_get_views_to_workspace>, <TestCaseFunction test_get_workspaces_from_a_view>]
        pytest_deselected [hook]
            items: [<Function test_connection_with_token>, <Function test_connection_with_password>, <Function test_connection_failed_for_invalid_token>, <Function test_connection_failed_for_invalid_password>, <Function test_authorized_user_can_send_command>, <Function test_unauthorized_user_cannot_send_command>, <Function test_authorized_user_gets_ack>, <Function test_connection_interrupted_when_logout_message_is_sent>, <Function test_join_and_leave_subscription>, <Function test_join_and_leave_subscription>, <Function test_observinglog_to_lovecsc>, <Function test_join_and_leave_every_subscription>, <Function test_join_and_leave_all_subscription>, <Function test_receive_messages_from_every_subscription>, <Function test_receive_messages_from_all_subscription>, <Function test_receive_message_for_subscribed_group_only>, <Function test_receive_message_for_subscribed_groups_only>, <Function test_receive_part_of_message_for_subscribed_groups_only>, <Function test_request_initial_state_when_subscribing_to_event>, <TestCaseFunction test_command_creates_users>, <TestCaseFunction test_command_sets_permissions_even_if_users_already_existed>, <TestCaseFunction test_invalid_config>, <TestCaseFunction test_syntax_error>, <TestCaseFunction test_valid_config>, <TestCaseFunction test_user_fails_to_validate_expired_token>, <TestCaseFunction test_user_login>, <TestCaseFunction test_user_login_failed>, <TestCaseFunction test_user_login_twice>, <TestCaseFunction test_user_logout>, <TestCaseFunction test_user_validate_token>, <TestCaseFunction test_user_validate_token_fail>, <TestCaseFunction test_new_view>, <TestCaseFunction test_unauthenticated_create_objects>, <TestCaseFunction test_unauthenticated_list_objects>, <TestCaseFunction test_unauthenticated_retrieve_objects>, <TestCaseFunction test_unauthenticated_update_objects>, <TestCaseFunction test_unauthorized_create_objects>, <TestCaseFunction test_unauthorized_list_objects>, <TestCaseFunction test_unauthorized_retrieve_objects>, <TestCaseFunction test_unauthorized_update_objects>, <TestCaseFunction test_authorized_create_objects>, <TestCaseFunction test_authorized_list_objects>, <TestCaseFunction test_authorized_retrieve_objects>, <TestCaseFunction test_authorized_update_objects>, <TestCaseFunction test_get_full_workspace>, <TestCaseFunction test_get_workspaces_with_view_name>, <TestCaseFunction test_create_workspace>, <TestCaseFunction test_retrieve_workspace>, <TestCaseFunction test_update_workspace>, <TestCaseFunction test_create_view>, <TestCaseFunction test_retrieve_view>, <TestCaseFunction test_update_view>, <TestCaseFunction test_create_workspace_view>, <TestCaseFunction test_retrieve_workspace_view>, <TestCaseFunction test_update_workspace_view>, <TestCaseFunction test_add_and_get_views_to_workspace>, <TestCaseFunction test_get_workspaces_from_a_view>]
        finish pytest_deselected --> [] [hook]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x7f3418040dd8>
            startdir: /usr/src/love/manager
            items: [<Function test_connection_interrupted_when_token_is_deleted>, <TestCaseFunction test_user_fails_to_validate_deleted_token>, <TestCaseFunction test_delete_thumbnail_file>, <TestCaseFunction test_unauthenticated_delete_objects>, <TestCaseFunction test_unauthorized_delete_objects>, <TestCaseFunction test_authorized_delete_objects>, <TestCaseFunction test_delete_workspace>, <TestCaseFunction test_delete_view>, <TestCaseFunction test_delete_workspace_view>]
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
      pytest_warning_captured [hook]
          warning_message: {message : DeprecationWarning("Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working"), category : 'DeprecationWarning', filename : '/usr/local/lib/python3.7/site-packages/itypes.py', lineno : 2, line : None}
          when: collect
          item: None
      finish pytest_warning_captured --> [] [hook]
      pytest_warning_captured [hook]
          warning_message: {message : DeprecationWarning("Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working"), category : 'DeprecationWarning', filename : '/usr/local/lib/python3.7/site-packages/itypes.py', lineno : 2, line : None}
          when: collect
          item: None
      finish pytest_warning_captured --> [] [hook]
    finish pytest_collection --> [<Function test_connection_interrupted_when_token_is_deleted>, <TestCaseFunction test_user_fails_to_validate_deleted_token>, <TestCaseFunction test_delete_thumbnail_file>, <TestCaseFunction test_unauthenticated_delete_objects>, <TestCaseFunction test_unauthorized_delete_objects>, <TestCaseFunction test_authorized_delete_objects>, <TestCaseFunction test_delete_workspace>, <TestCaseFunction test_delete_view>, <TestCaseFunction test_delete_workspace_view>] [hook]
    pytest_runtestloop [hook]
        session: <Session manager exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=9>
      pytest_runtest_protocol [hook]
          item: <Function test_connection_interrupted_when_token_is_deleted>
          nextitem: <TestCaseFunction test_user_fails_to_validate_deleted_token>
        pytest_runtest_logstart [hook]
            nodeid: subscription/tests/test_connection.py::TestClientConnection::test_connection_interrupted_when_token_is_deleted
            location: ('subscription/tests/test_connection.py', 128, 'TestClientConnection.test_connection_interrupted_when_token_is_deleted')
        early skip of rewriting module: py._io.capture [assertion]
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_connection_interrupted_when_token_is_deleted>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_fail_for_invalid_template_variable' scope='session' baseid=''>
              request: <SubRequest '_fail_for_invalid_template_variable' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='django_test_environment' scope='session' baseid=''>
              request: <SubRequest 'django_test_environment' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='django_db_blocker' scope='session' baseid=''>
              request: <SubRequest 'django_db_blocker' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_setup --> <pytest_django.plugin._DatabaseBlocker object at 0x7f3416beb588> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_django_setup_unittest' scope='class' baseid=''>
              request: <SubRequest '_django_setup_unittest' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_dj_autoclear_mailbox' scope='function' baseid=''>
              request: <SubRequest '_dj_autoclear_mailbox' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_django_clear_site_cache' scope='function' baseid=''>
              request: <SubRequest '_django_clear_site_cache' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_django_db_marker' scope='function' baseid=''>
              request: <SubRequest '_django_db_marker' for <Function test_connection_interrupted_when_token_is_deleted>>
            pytest_fixture_setup [hook]
                fixturedef: <FixtureDef argname='django_db_use_migrations' scope='session' baseid=''>
                request: <SubRequest 'django_db_use_migrations' for <Function test_connection_interrupted_when_token_is_deleted>>
            finish pytest_fixture_setup --> True [hook]
            pytest_fixture_setup [hook]
                fixturedef: <FixtureDef argname='django_db_keepdb' scope='session' baseid=''>
                request: <SubRequest 'django_db_keepdb' for <Function test_connection_interrupted_when_token_is_deleted>>
            finish pytest_fixture_setup --> False [hook]
            pytest_fixture_setup [hook]
                fixturedef: <FixtureDef argname='django_db_createdb' scope='session' baseid=''>
                request: <SubRequest 'django_db_createdb' for <Function test_connection_interrupted_when_token_is_deleted>>
            finish pytest_fixture_setup --> False [hook]
            pytest_fixture_setup [hook]
                fixturedef: <FixtureDef argname='django_db_modify_db_settings_xdist_suffix' scope='session' baseid=''>
                request: <SubRequest 'django_db_modify_db_settings_xdist_suffix' for <Function test_connection_interrupted_when_token_is_deleted>>
            finish pytest_fixture_setup --> None [hook]
            pytest_fixture_setup [hook]
                fixturedef: <FixtureDef argname='django_db_modify_db_settings' scope='session' baseid=''>
                request: <SubRequest 'django_db_modify_db_settings' for <Function test_connection_interrupted_when_token_is_deleted>>
            finish pytest_fixture_setup --> None [hook]
            pytest_fixture_setup [hook]
                fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
                request: <SubRequest 'django_db_setup' for <Function test_connection_interrupted_when_token_is_deleted>>
            matched marked file 'pytest_django.compat' (from 'pytest_django') [assertion]
            find_module called for: pytest_django.compat [assertion]
            found cached rewritten pyc for '/usr/local/lib/python3.7/site-packages/pytest_django/compat.py' [assertion]
            early skip of rewriting module: django.core.management.commands.migrate [assertion]
            early skip of rewriting module: django.db.migrations.autodetector [assertion]
            early skip of rewriting module: django.db.migrations.optimizer [assertion]
            early skip of rewriting module: django.db.migrations.questioner [assertion]
            early skip of rewriting module: django.db.migrations.loader [assertion]
            early skip of rewriting module: django.db.migrations.graph [assertion]
            early skip of rewriting module: django.db.migrations.recorder [assertion]
            early skip of rewriting module: django.db.migrations.utils [assertion]
            early skip of rewriting module: django.db.migrations.executor [assertion]
            early skip of rewriting module: django.contrib.admin.management [assertion]
            early skip of rewriting module: django.contrib.sessions.management [assertion]
            early skip of rewriting module: django.contrib.sessions.management [assertion]
            early skip of rewriting module: django.contrib.messages.management [assertion]
            early skip of rewriting module: rest_framework.management [assertion]
            early skip of rewriting module: rest_framework.management [assertion]
            early skip of rewriting module: corsheaders.management [assertion]
            early skip of rewriting module: drf_yasg.management [assertion]
            early skip of rewriting module: drf_yasg.management [assertion]
            early skip of rewriting module: subscription.management [assertion]
            early skip of rewriting module: ui_framework.management [assertion]
            early skip of rewriting module: django.contrib.auth.migrations [assertion]
            early skip of rewriting module: django.contrib.auth.migrations.0010_alter_group_name_max_length [assertion]
            early skip of rewriting module: django.contrib.auth.migrations.0003_alter_user_email_max_length [assertion]
            early skip of rewriting module: django.contrib.auth.migrations.0006_require_contenttypes_0002 [assertion]
            early skip of rewriting module: django.contrib.auth.migrations.0002_alter_permission_name_max_length [assertion]
            early skip of rewriting module: django.contrib.auth.migrations.0008_alter_user_username_max_length [assertion]
            early skip of rewriting module: django.contrib.auth.migrations.0004_alter_user_username_opts [assertion]
            early skip of rewriting module: django.contrib.auth.migrations.0011_update_proxy_permissions [assertion]
            early skip of rewriting module: django.contrib.auth.migrations.0009_alter_user_last_name_max_length [assertion]
            early skip of rewriting module: django.contrib.auth.migrations.0007_alter_validators_add_error_messages [assertion]
            early skip of rewriting module: django.contrib.auth.migrations.0001_initial [assertion]
            early skip of rewriting module: django.contrib.auth.migrations.0005_alter_user_last_login_null [assertion]
            early skip of rewriting module: django.contrib.admin.migrations [assertion]
            early skip of rewriting module: django.contrib.admin.migrations.0003_logentry_add_action_flag_choices [assertion]
            early skip of rewriting module: django.contrib.admin.migrations.0002_logentry_remove_auto_add [assertion]
            early skip of rewriting module: django.contrib.admin.migrations.0001_initial [assertion]
            early skip of rewriting module: django.contrib.contenttypes.migrations [assertion]
            early skip of rewriting module: django.contrib.contenttypes.migrations.0002_remove_content_type_name [assertion]
            early skip of rewriting module: django.contrib.contenttypes.migrations.0001_initial [assertion]
            early skip of rewriting module: django.contrib.sessions.migrations [assertion]
            early skip of rewriting module: django.contrib.sessions.migrations.0001_initial [assertion]
            early skip of rewriting module: django.contrib.messages.migrations [assertion]
            early skip of rewriting module: django.contrib.staticfiles.migrations [assertion]
            early skip of rewriting module: channels.migrations [assertion]
            early skip of rewriting module: rest_framework.migrations [assertion]
            early skip of rewriting module: corsheaders.migrations [assertion]
            early skip of rewriting module: drf_yasg.migrations [assertion]
            early skip of rewriting module: api.migrations [assertion]
            early skip of rewriting module: api.migrations.0002_auto_20190528_1546 [assertion]
            early skip of rewriting module: api.migrations.0003_auto_20190528_1552 [assertion]
            early skip of rewriting module: api.migrations.0005_auto_20190722_1622 [assertion]
            early skip of rewriting module: api.migrations.0004_globalpermissions [assertion]
            early skip of rewriting module: api.migrations.0001_initial [assertion]
            early skip of rewriting module: subscription.migrations [assertion]
            early skip of rewriting module: ui_framework.migrations [assertion]
            early skip of rewriting module: ui_framework.migrations.0003_view_thumbnail [assertion]
            early skip of rewriting module: ui_framework.migrations.0001_initial [assertion]
            early skip of rewriting module: ui_framework.migrations.0002_view_data [assertion]
            early skip of rewriting module: django.db.models.sql.compiler [assertion]
            early skip of rewriting module: django.contrib.auth.migrations [assertion]
            early skip of rewriting module: django.contrib.admin.migrations [assertion]
            early skip of rewriting module: django.contrib.contenttypes.migrations [assertion]
            early skip of rewriting module: django.contrib.sessions.migrations [assertion]
            early skip of rewriting module: django.contrib.messages.migrations [assertion]
            early skip of rewriting module: django.contrib.staticfiles.migrations [assertion]
            early skip of rewriting module: channels.migrations [assertion]
            early skip of rewriting module: rest_framework.migrations [assertion]
            early skip of rewriting module: corsheaders.migrations [assertion]
            early skip of rewriting module: drf_yasg.migrations [assertion]
            early skip of rewriting module: api.migrations [assertion]
            early skip of rewriting module: subscription.migrations [assertion]
            early skip of rewriting module: ui_framework.migrations [assertion]
            early skip of rewriting module: django.core.serializers.xml_serializer [assertion]
            early skip of rewriting module: xml.dom.pulldom [assertion]
            early skip of rewriting module: xml.sax [assertion]
            early skip of rewriting module: xml.sax.xmlreader [assertion]
            early skip of rewriting module: xml.sax.handler [assertion]
            early skip of rewriting module: xml.sax._exceptions [assertion]
            early skip of rewriting module: xml.sax.expatreader [assertion]
            early skip of rewriting module: xml.sax.saxutils [assertion]
            early skip of rewriting module: django.utils.xmlutils [assertion]
            early skip of rewriting module: django.core.serializers.pyyaml [assertion]
            early skip of rewriting module: django.core.management.commands.createcachetable [assertion]
            early skip of rewriting module: django.core.cache.backends.db [assertion]
            early skip of rewriting module: django.core.cache.backends.locmem [assertion]
            finish pytest_fixture_setup --> None [hook]
            pytest_fixture_setup [hook]
                fixturedef: <FixtureDef argname='transactional_db' scope='function' baseid=''>
                request: <SubRequest 'transactional_db' for <Function test_connection_interrupted_when_token_is_deleted>>
            finish pytest_fixture_setup --> None [hook]
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_django_set_urlconf' scope='function' baseid=''>
              request: <SubRequest '_django_set_urlconf' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_live_server_helper' scope='function' baseid=''>
              request: <SubRequest '_live_server_helper' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_template_string_if_invalid_marker' scope='function' baseid=''>
              request: <SubRequest '_template_string_if_invalid_marker' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_connection_interrupted_when_token_is_deleted>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'subscription/tests/test_connection.py::TestClientConnection::test_connection_interrupted_when_token_is_deleted' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'subscription/tests/test_connection.py::TestClientConnection::test_connection_interrupted_when_token_is_deleted' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'subscription/tests/test_connection.py::TestClientConnection::test_connection_interrupted_when_token_is_deleted' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f3418040dd8>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_connection_interrupted_when_token_is_deleted>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_connection_interrupted_when_token_is_deleted>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_connection_interrupted_when_token_is_deleted>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'subscription/tests/test_connection.py::TestClientConnection::test_connection_interrupted_when_token_is_deleted' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'subscription/tests/test_connection.py::TestClientConnection::test_connection_interrupted_when_token_is_deleted' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'subscription/tests/test_connection.py::TestClientConnection::test_connection_interrupted_when_token_is_deleted' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f3418040dd8>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_connection_interrupted_when_token_is_deleted>
            nextitem: <TestCaseFunction test_user_fails_to_validate_deleted_token>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_template_string_if_invalid_marker' scope='function' baseid=''>
              request: <SubRequest '_template_string_if_invalid_marker' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_live_server_helper' scope='function' baseid=''>
              request: <SubRequest '_live_server_helper' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_django_set_urlconf' scope='function' baseid=''>
              request: <SubRequest '_django_set_urlconf' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_django_db_marker' scope='function' baseid=''>
              request: <SubRequest '_django_db_marker' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_django_db_marker' scope='function' baseid=''>
              request: <SubRequest '_django_db_marker' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        early skip of rewriting module: django.core.management.commands.flush [assertion]
        early skip of rewriting module: django.contrib.admin.management [assertion]
        early skip of rewriting module: django.contrib.messages.management [assertion]
        early skip of rewriting module: corsheaders.management [assertion]
        early skip of rewriting module: subscription.management [assertion]
        early skip of rewriting module: ui_framework.management [assertion]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='transactional_db' scope='function' baseid=''>
              request: <SubRequest 'transactional_db' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_django_clear_site_cache' scope='function' baseid=''>
              request: <SubRequest '_django_clear_site_cache' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_dj_autoclear_mailbox' scope='function' baseid=''>
              request: <SubRequest '_dj_autoclear_mailbox' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_django_setup_unittest' scope='class' baseid=''>
              request: <SubRequest '_django_setup_unittest' for <Function test_connection_interrupted_when_token_is_deleted>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_connection_interrupted_when_token_is_deleted>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'subscription/tests/test_connection.py::TestClientConnection::test_connection_interrupted_when_token_is_deleted' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'subscription/tests/test_connection.py::TestClientConnection::test_connection_interrupted_when_token_is_deleted' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'subscription/tests/test_connection.py::TestClientConnection::test_connection_interrupted_when_token_is_deleted' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f3418040dd8>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: subscription/tests/test_connection.py::TestClientConnection::test_connection_interrupted_when_token_is_deleted
            location: ('subscription/tests/test_connection.py', 128, 'TestClientConnection.test_connection_interrupted_when_token_is_deleted')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <TestCaseFunction test_user_fails_to_validate_deleted_token>
          nextitem: <TestCaseFunction test_delete_thumbnail_file>
        pytest_runtest_logstart [hook]
            nodeid: api/tests/tests_auth_api.py::AuthApiTestCase::test_user_fails_to_validate_deleted_token
            location: ('api/tests/tests_auth_api.py', 174, 'AuthApiTestCase.test_user_fails_to_validate_deleted_token')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <TestCaseFunction test_user_fails_to_validate_deleted_token>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_django_setup_unittest' scope='class' baseid=''>
              request: <SubRequest '_django_setup_unittest' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_UnitTestCase__pytest_class_setup' scope='class' baseid='api/tests/tests_auth_api.py::AuthApiTestCase'>
              request: <SubRequest '_UnitTestCase__pytest_class_setup' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_dj_autoclear_mailbox' scope='function' baseid=''>
              request: <SubRequest '_dj_autoclear_mailbox' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_django_clear_site_cache' scope='function' baseid=''>
              request: <SubRequest '_django_clear_site_cache' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_django_db_marker' scope='function' baseid=''>
              request: <SubRequest '_django_db_marker' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_django_set_urlconf' scope='function' baseid=''>
              request: <SubRequest '_django_set_urlconf' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_live_server_helper' scope='function' baseid=''>
              request: <SubRequest '_live_server_helper' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_template_string_if_invalid_marker' scope='function' baseid=''>
              request: <SubRequest '_template_string_if_invalid_marker' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
          finish pytest_fixture_setup --> None [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction test_user_fails_to_validate_deleted_token>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'api/tests/tests_auth_api.py::AuthApiTestCase::test_user_fails_to_validate_deleted_token' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'api/tests/tests_auth_api.py::AuthApiTestCase::test_user_fails_to_validate_deleted_token' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'api/tests/tests_auth_api.py::AuthApiTestCase::test_user_fails_to_validate_deleted_token' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f3418040dd8>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <TestCaseFunction test_user_fails_to_validate_deleted_token>
        early skip of rewriting module: manager.urls [assertion]
        early skip of rewriting module: drf_yasg.views [assertion]
        early skip of rewriting module: django.views.decorators.vary [assertion]
        early skip of rewriting module: rest_framework.response [assertion]
        early skip of rewriting module: rest_framework.views [assertion]
        early skip of rewriting module: rest_framework.schemas [assertion]
        early skip of rewriting module: rest_framework.schemas.coreapi [assertion]
        early skip of rewriting module: rest_framework.schemas.generators [assertion]
        early skip of rewriting module: django.contrib.admindocs [assertion]
        early skip of rewriting module: django.contrib.admindocs.views [assertion]
        early skip of rewriting module: django.contrib.admin.views.decorators [assertion]
        early skip of rewriting module: django.contrib.auth.decorators [assertion]
        early skip of rewriting module: django.shortcuts [assertion]
        early skip of rewriting module: django.contrib.admindocs.utils [assertion]
        early skip of rewriting module: docutils [assertion]
        early skip of rewriting module: docutils.core [assertion]
        early skip of rewriting module: docutils.frontend [assertion]
        early skip of rewriting module: optparse [assertion]
        early skip of rewriting module: docutils.utils [assertion]
        early skip of rewriting module: docutils.nodes [assertion]
        early skip of rewriting module: docutils.io [assertion]
        early skip of rewriting module: docutils.utils.error_reporting [assertion]
        early skip of rewriting module: docutils.readers [assertion]
        early skip of rewriting module: docutils.parsers [assertion]
        early skip of rewriting module: docutils.transforms [assertion]
        early skip of rewriting module: docutils.languages [assertion]
        early skip of rewriting module: docutils.transforms.universal [assertion]
        early skip of rewriting module: docutils.utils.smartquotes [assertion]
        early skip of rewriting module: docutils.writers [assertion]
        early skip of rewriting module: docutils.readers.doctree [assertion]
        early skip of rewriting module: docutils.parsers.rst [assertion]
        early skip of rewriting module: docutils.statemachine [assertion]
        early skip of rewriting module: docutils.parsers.rst.states [assertion]
        early skip of rewriting module: docutils.parsers.rst.directives [assertion]
        early skip of rewriting module: docutils.parsers.rst.languages [assertion]
        early skip of rewriting module: docutils.parsers.rst.languages.en [assertion]
        early skip of rewriting module: docutils.parsers.rst.tableparser [assertion]
        early skip of rewriting module: docutils.parsers.rst.roles [assertion]
        early skip of rewriting module: docutils.utils.code_analyzer [assertion]
        early skip of rewriting module: docutils.utils.punctuation_chars [assertion]
        early skip of rewriting module: docutils.utils.roman [assertion]
        early skip of rewriting module: docutils.utils.urischemes [assertion]
        early skip of rewriting module: rest_framework.schemas.inspectors [assertion]
        early skip of rewriting module: rest_framework.schemas.utils [assertion]
        early skip of rewriting module: rest_framework.mixins [assertion]
        early skip of rewriting module: rest_framework.schemas.openapi [assertion]
        early skip of rewriting module: api.authentication [assertion]
        early skip of rewriting module: rest_framework.authentication [assertion]
        early skip of rewriting module: rest_framework.permissions [assertion]
        early skip of rewriting module: rest_framework.parsers [assertion]
        early skip of rewriting module: rest_framework.negotiation [assertion]
        early skip of rewriting module: rest_framework.utils.mediatypes [assertion]
        early skip of rewriting module: rest_framework.metadata [assertion]
        early skip of rewriting module: drf_yasg.app_settings [assertion]
        early skip of rewriting module: drf_yasg.renderers [assertion]
        early skip of rewriting module: drf_yasg.codecs [assertion]
        early skip of rewriting module: ruamel.yaml [assertion]
        early skip of rewriting module: ruamel.yaml.cyaml [assertion]
        early skip of rewriting module: _ruamel_yaml [assertion]
        early skip of rewriting module: ruamel.yaml.error [assertion]
        early skip of rewriting module: ruamel.yaml.compat [assertion]
        early skip of rewriting module: ruamel.ordereddict [assertion]
        early skip of rewriting module: ruamel.yaml.reader [assertion]
        early skip of rewriting module: ruamel.yaml.util [assertion]
        early skip of rewriting module: ruamel.yaml.scanner [assertion]
        early skip of rewriting module: ruamel.yaml.tokens [assertion]
        early skip of rewriting module: ruamel.yaml.parser [assertion]
        early skip of rewriting module: ruamel.yaml.events [assertion]
        early skip of rewriting module: ruamel.yaml.composer [assertion]
        early skip of rewriting module: ruamel.yaml.nodes [assertion]
        early skip of rewriting module: ruamel.yaml.constructor [assertion]
        early skip of rewriting module: ruamel.yaml.comments [assertion]
        early skip of rewriting module: ruamel.yaml.scalarstring [assertion]
        early skip of rewriting module: ruamel.yaml.anchor [assertion]
        early skip of rewriting module: ruamel.yaml.scalarint [assertion]
        early skip of rewriting module: ruamel.yaml.scalarfloat [assertion]
        early skip of rewriting module: ruamel.yaml.scalarbool [assertion]
        early skip of rewriting module: ruamel.yaml.timestamp [assertion]
        early skip of rewriting module: ruamel.yaml.emitter [assertion]
        early skip of rewriting module: ruamel.yaml.serializer [assertion]
        early skip of rewriting module: ruamel.yaml.representer [assertion]
        early skip of rewriting module: ruamel.yaml.resolver [assertion]
        early skip of rewriting module: ruamel.yaml.main [assertion]
        early skip of rewriting module: ruamel.yaml.loader [assertion]
        early skip of rewriting module: ruamel.yaml.dumper [assertion]
        early skip of rewriting module: drf_yasg.openapi [assertion]
        early skip of rewriting module: inflection [assertion]
        early skip of rewriting module: drf_yasg.utils [assertion]
        early skip of rewriting module: drf_yasg.errors [assertion]
        early skip of rewriting module: django.conf.urls.static [assertion]
        early skip of rewriting module: drf_yasg.generators [assertion]
        early skip of rewriting module: rest_framework.versioning [assertion]
        early skip of rewriting module: rest_framework.templatetags [assertion]
        early skip of rewriting module: rest_framework.templatetags.rest_framework [assertion]
        early skip of rewriting module: drf_yasg.inspectors [assertion]
        early skip of rewriting module: drf_yasg.inspectors.base [assertion]
        early skip of rewriting module: drf_yasg.inspectors.field [assertion]
        early skip of rewriting module: djangorestframework_camel_case [assertion]
        early skip of rewriting module: rest_framework_recursive [assertion]
        early skip of rewriting module: drf_yasg.inspectors.query [assertion]
        early skip of rewriting module: rest_framework.pagination [assertion]
        early skip of rewriting module: drf_yasg.inspectors.view [assertion]
        early skip of rewriting module: django.contrib.contenttypes.views [assertion]
        early skip of rewriting module: api.urls [assertion]
        early skip of rewriting module: rest_framework.routers [assertion]
        early skip of rewriting module: rest_framework.schemas.views [assertion]
        early skip of rewriting module: rest_framework.urlpatterns [assertion]
        early skip of rewriting module: api.views [assertion]
        early skip of rewriting module: jsonschema [assertion]
        early skip of rewriting module: jsonschema.exceptions [assertion]
        early skip of rewriting module: jsonschema._utils [assertion]
        early skip of rewriting module: jsonschema.compat [assertion]
        early skip of rewriting module: jsonschema._format [assertion]
        early skip of rewriting module: rfc3987 [assertion]
        early skip of rewriting module: rfc3986_validator [assertion]
        early skip of rewriting module: strict_rfc3339 [assertion]
        early skip of rewriting module: rfc3339_validator [assertion]
        early skip of rewriting module: webcolors [assertion]
        early skip of rewriting module: jsonpointer [assertion]
        early skip of rewriting module: uritemplate.exceptions [assertion]
        early skip of rewriting module: jsonschema._types [assertion]
        early skip of rewriting module: pyrsistent [assertion]
        early skip of rewriting module: pyrsistent._pmap [assertion]
        early skip of rewriting module: pyrsistent._compat [assertion]
        early skip of rewriting module: pyrsistent._pvector [assertion]
        early skip of rewriting module: pyrsistent._transformations [assertion]
        early skip of rewriting module: pvectorc [assertion]
        early skip of rewriting module: pyrsistent._pset [assertion]
        early skip of rewriting module: pyrsistent._pbag [assertion]
        early skip of rewriting module: pyrsistent._plist [assertion]
        early skip of rewriting module: pyrsistent._pdeque [assertion]
        early skip of rewriting module: pyrsistent._checked_types [assertion]
        early skip of rewriting module: pyrsistent._field_common [assertion]
        early skip of rewriting module: pyrsistent._precord [assertion]
        early skip of rewriting module: pyrsistent._pclass [assertion]
        early skip of rewriting module: pyrsistent._immutable [assertion]
        early skip of rewriting module: pyrsistent._helpers [assertion]
        early skip of rewriting module: pyrsistent._toolz [assertion]
        early skip of rewriting module: jsonschema.validators [assertion]
        early skip of rewriting module: jsonschema._legacy_validators [assertion]
        early skip of rewriting module: jsonschema._validators [assertion]
        early skip of rewriting module: importlib.metadata [assertion]
        early skip of rewriting module: rest_framework.authtoken.views [assertion]
        early skip of rewriting module: rest_framework.authtoken.serializers [assertion]
        early skip of rewriting module: rest_framework.decorators [assertion]
        early skip of rewriting module: api.serializers [assertion]
        early skip of rewriting module: api.schema_validator [assertion]
        early skip of rewriting module: rest_framework.urls [assertion]
        early skip of rewriting module: django.contrib.auth.views [assertion]
        early skip of rewriting module: ui_framework.urls [assertion]
        early skip of rewriting module: ui_framework.views [assertion]
        early skip of rewriting module: rest_framework.viewsets [assertion]
        early skip of rewriting module: rest_framework.generics [assertion]
        early skip of rewriting module: ui_framework.serializers [assertion]
        early skip of rewriting module: readline [assertion]
          pytest_enter_pdb [hook]
              config: <_pytest.config.Config object at 0x7f3418040dd8>
              pdb: <_pytest.debugging.pytestPDB._get_pdb_wrapper_class.<locals>.PytestPdbWrapper object at 0x7f33f805deb8>
          finish pytest_enter_pdb --> [] [hook]
    pytest_keyboard_interrupt [hook]
        excinfo: <ExceptionInfo Exit tblen=47>
    finish pytest_keyboard_interrupt --> [] [hook]
    pytest_sessionfinish [hook]
        session: <Session manager exitstatus=<ExitCode.INTERRUPTED: 2> testsfailed=0 testscollected=9>
        exitstatus: ExitCode.INTERRUPTED
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='_template_string_if_invalid_marker' scope='function' baseid=''>
          request: <SubRequest '_template_string_if_invalid_marker' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='_live_server_helper' scope='function' baseid=''>
          request: <SubRequest '_live_server_helper' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='_django_set_urlconf' scope='function' baseid=''>
          request: <SubRequest '_django_set_urlconf' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='_django_db_marker' scope='function' baseid=''>
          request: <SubRequest '_django_db_marker' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='_django_clear_site_cache' scope='function' baseid=''>
          request: <SubRequest '_django_clear_site_cache' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='_dj_autoclear_mailbox' scope='function' baseid=''>
          request: <SubRequest '_dj_autoclear_mailbox' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='_UnitTestCase__pytest_class_setup' scope='class' baseid='api/tests/tests_auth_api.py::AuthApiTestCase'>
          request: <SubRequest '_UnitTestCase__pytest_class_setup' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='_django_setup_unittest' scope='class' baseid=''>
          request: <SubRequest '_django_setup_unittest' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='_django_setup_unittest' scope='class' baseid=''>
          request: <SubRequest '_django_setup_unittest' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='transactional_db' scope='function' baseid=''>
          request: <SubRequest 'transactional_db' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='transactional_db' scope='function' baseid=''>
          request: <SubRequest 'transactional_db' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_modify_db_settings' scope='session' baseid=''>
          request: <SubRequest 'django_db_modify_db_settings' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_modify_db_settings' scope='session' baseid=''>
          request: <SubRequest 'django_db_modify_db_settings' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_modify_db_settings' scope='session' baseid=''>
          request: <SubRequest 'django_db_modify_db_settings' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_modify_db_settings' scope='session' baseid=''>
          request: <SubRequest 'django_db_modify_db_settings' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_modify_db_settings' scope='session' baseid=''>
          request: <SubRequest 'django_db_modify_db_settings' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_modify_db_settings_xdist_suffix' scope='session' baseid=''>
          request: <SubRequest 'django_db_modify_db_settings_xdist_suffix' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_createdb' scope='session' baseid=''>
          request: <SubRequest 'django_db_createdb' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_keepdb' scope='session' baseid=''>
          request: <SubRequest 'django_db_keepdb' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_use_migrations' scope='session' baseid=''>
          request: <SubRequest 'django_db_use_migrations' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='_django_setup_unittest' scope='class' baseid=''>
          request: <SubRequest '_django_setup_unittest' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='transactional_db' scope='function' baseid=''>
          request: <SubRequest 'transactional_db' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='_django_setup_unittest' scope='class' baseid=''>
          request: <SubRequest '_django_setup_unittest' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_blocker' scope='session' baseid=''>
          request: <SubRequest 'django_db_blocker' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_test_environment' scope='session' baseid=''>
          request: <SubRequest 'django_test_environment' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='_fail_for_invalid_template_variable' scope='session' baseid=''>
          request: <SubRequest '_fail_for_invalid_template_variable' for <TestCaseFunction test_user_fails_to_validate_deleted_token>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_setup' scope='session' baseid=''>
          request: <SubRequest 'django_db_setup' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_modify_db_settings' scope='session' baseid=''>
          request: <SubRequest 'django_db_modify_db_settings' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_modify_db_settings_xdist_suffix' scope='session' baseid=''>
          request: <SubRequest 'django_db_modify_db_settings_xdist_suffix' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_createdb' scope='session' baseid=''>
          request: <SubRequest 'django_db_createdb' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_keepdb' scope='session' baseid=''>
          request: <SubRequest 'django_db_keepdb' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_use_migrations' scope='session' baseid=''>
          request: <SubRequest 'django_db_use_migrations' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_db_blocker' scope='session' baseid=''>
          request: <SubRequest 'django_db_blocker' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='django_test_environment' scope='session' baseid=''>
          request: <SubRequest 'django_test_environment' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='_fail_for_invalid_template_variable' scope='session' baseid=''>
          request: <SubRequest '_fail_for_invalid_template_variable' for <Function test_connection_interrupted_when_token_is_deleted>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x7f3410ae0be0>
          exitstatus: ExitCode.INTERRUPTED
          config: <_pytest.config.Config object at 0x7f3418040dd8>
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x7f3418040dd8>
    finish pytest_unconfigure --> [] [hook]
